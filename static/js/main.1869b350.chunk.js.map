{"version":3,"sources":["engine/engine.worker.js","ui/img/white_pawn.svg","ui/img/black_pawn.svg","ui/img/white_knight.svg","ui/img/black_knight.svg","ui/img/white_bishop.svg","ui/img/black_bishop.svg","ui/img/white_rook.svg","ui/img/black_rook.svg","ui/img/white_queen.svg","ui/img/black_queen.svg","ui/img/white_king.svg","ui/img/black_king.svg","ui/AnimatedSpinner.js","engine/move.js","ui/Field.js","ui/Piece.js","engine/constants.js","ui/Board.js","ui/GameMenu.js","ui/PromotionPieceSelection.js","ui/Game.js","ui/App.js","index.js"],"names":["addMethods","methods","module","exports","w","Worker","name","AnimatedSpinner","styled","div","Move","piece","start","end","this","encodedMove","Math","abs","FieldDiv","props","isEven","markColor","Field","boardIndex","children","movePiece","isStart","isEnd","isPossibleTarget","useDrop","accept","drop","item","monitor","pieceId","dropRef","fieldMarkStyle","ref","style","position","className","whiteImages","whitePawn","whiteKnight","whiteBishop","whiteRook","whiteQueen","whiteKing","blackImages","blackPawn","blackKnight","blackBishop","blackRook","blackQueen","blackKing","pieceNames","Image","img","isFirefox","InstallTrigger","PieceImage","color","src","alt","Piece","onPickup","onDrop","useDrag","type","begin","dropResult","collect","isDragging","drag","pieceImage","BoardGrid","Board","board","isRotated","lastMove","currentPieceMoves","handlePlayerMove","updatePossibleMoves","clearPossibleMoves","slice","map","_","idx","rotatedIndex","key","has","MenuBar","MenuItem","hidden","GameButton","button","GameResult","IconRadioInput","input","IconRadioLabel","label","getGameResultIcon","winningPlayerColor","humanPlayerColor","faMedal","faRobot","faBalanceScale","IconRadioButtons","currentValue","options","onChange","value","description","icon","Fragment","id","defaultChecked","e","target","htmlFor","title","size","GameMenu","isAiThinking","firstMovePlayed","gameEnded","startNewGame","switchSides","rotateBoard","difficultyLevel","setDifficultyLevel","canUndoMove","undoMove","disabled","onClick","faPlus","faExchangeAlt","faUndo","faRetweet","faDiceOne","faDiceTwo","faDiceThree","faDiceFour","faDiceFive","Overlay","row","column","PromotionPieceSelection","playerColor","onSelection","rotatedColumn","top","pieces","index","engine","engineWorkerLoader","GameArea","startPosition","Centered","Game","useState","setRotateBoard","activePlayer","setActivePlayer","setHumanPlayerColor","isAiTurn","setAiTurn","setBoard","setGameEnded","availableMoves","setAvailableMoves","Set","setCurrentPieceMoves","winningPlayer","setWinningPlayer","moveHistory","setMoveHistory","undefined","promotion","setPromotion","length","clearAvailableMoves","addMove","useCallback","move","updateGame","state","a","moves","checkMate","useEffect","init","newGame","setPosition","gameState","canMove","some","calculateAIMove","calculateMove","performMove","previousMoveHistory","interimBoard","handlePromotion","possibleMoves","filter","multiBackends","backendFactories","manager","backends","b","setup","args","forEach","apply","teardown","connectDropTarget","connectDragPreview","connectDragSource","App","DndProvider","backend","HTML5Backend","TouchBackend","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1869b350.chunk.js","sourcesContent":["\n\t\t\t\tvar addMethods = require(\"../../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = [\"init\",\"newGame\",\"calculateMove\",\"performMove\",\"setPosition\"]\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"5cfbaf910f6743ac775f.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t","module.exports = __webpack_public_path__ + \"static/media/white_pawn.41da1b5b.svg\";","module.exports = __webpack_public_path__ + \"static/media/black_pawn.3cab4671.svg\";","module.exports = __webpack_public_path__ + \"static/media/white_knight.3ece5029.svg\";","module.exports = __webpack_public_path__ + \"static/media/black_knight.88ad52be.svg\";","module.exports = __webpack_public_path__ + \"static/media/white_bishop.36a96cf8.svg\";","module.exports = __webpack_public_path__ + \"static/media/black_bishop.341337f4.svg\";","module.exports = __webpack_public_path__ + \"static/media/white_rook.007b43f5.svg\";","module.exports = __webpack_public_path__ + \"static/media/black_rook.e7f61dec.svg\";","module.exports = __webpack_public_path__ + \"static/media/white_queen.51d538db.svg\";","module.exports = __webpack_public_path__ + \"static/media/black_queen.87612c77.svg\";","module.exports = __webpack_public_path__ + \"static/media/white_king.9e716b1e.svg\";","module.exports = __webpack_public_path__ + \"static/media/black_king.12ae1430.svg\";","/*\n * A free and open source chess game using AssemblyScript and React\n * Copyright (C) 2020 mhonert (https://github.com/mhonert)\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport styled from 'styled-components/macro';\nimport React from 'react';\n\n/* Animated spinner adapted from https://loading.io/css/ */\nconst AnimatedSpinner = styled.div`\n  color: #073642;\n  display: inline-block;\n  position: relative;\n  width: 80px;\n  height: 80px;\n  \n  margin-top: 1rem;\n  margin-right: 0.5rem;\n  margin-left: 1.5rem;\n  \n  div {\n    transform-origin: 40px 40px;\n    animation: lds-spinner 1.2s linear infinite;\n  }\n  div:after {\n    content: \" \";\n    display: block;\n    position: absolute;\n    top: 3px;\n    left: 37px;\n    width: 6px;\n    height: 18px;\n    border-radius: 20%;\n    background: #073642;\n  }\n  div:nth-child(1) {\n    transform: rotate(0deg);\n    animation-delay: -1.1s;\n  }\n  div:nth-child(2) {\n    transform: rotate(30deg);\n    animation-delay: -1s;\n  }\n  div:nth-child(3) {\n    transform: rotate(60deg);\n    animation-delay: -0.9s;\n  }\n  div:nth-child(4) {\n    transform: rotate(90deg);\n    animation-delay: -0.8s;\n  }\n  div:nth-child(5) {\n    transform: rotate(120deg);\n    animation-delay: -0.7s;\n  }\n  div:nth-child(6) {\n    transform: rotate(150deg);\n    animation-delay: -0.6s;\n  }\n  div:nth-child(7) {\n    transform: rotate(180deg);\n    animation-delay: -0.5s;\n  }\n  div:nth-child(8) {\n    transform: rotate(210deg);\n    animation-delay: -0.4s;\n  }\n  div:nth-child(9) {\n    transform: rotate(240deg);\n    animation-delay: -0.3s;\n  }\n  div:nth-child(10) {\n    transform: rotate(270deg);\n    animation-delay: -0.2s;\n  }\n  div:nth-child(11) {\n    transform: rotate(300deg);\n    animation-delay: -0.1s;\n  }\n  div:nth-child(12) {\n    transform: rotate(330deg);\n    animation-delay: 0s;\n  }\n  @keyframes lds-spinner {\n    0% {\n      opacity: 1;\n    }\n    100% {\n      opacity: 0;\n    }\n  }\n`\n\nexport default () => (\n  <AnimatedSpinner>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n  </AnimatedSpinner>\n);\n","/*\n * A free and open source chess game using AssemblyScript and React\n * Copyright (C) 2019 mhonert (https://github.com/mhonert)\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nexport class Move {\n  constructor(piece, start, end) {\n    this.start = start;\n    this.end = end;\n    this.encodedMove = Math.abs(piece) | (start << 3) | (end << 10);\n  }\n\n  static fromEncodedMove(encodedMove) {\n    const piece = encodedMove & 0x7; // Bits 0-2\n    const start = (encodedMove >> 3) & 0x7F; // Bits 3-10\n    const end = (encodedMove >> 10) & 0x7F; // Bit 10-17\n\n    return new Move(piece, start, end);\n  }\n}\n","/*\n * A free and open source chess game using AssemblyScript and React\n * Copyright (C) 2020 mhonert (https://github.com/mhonert)\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react';\nimport { useDrop } from 'react-dnd';\nimport styled from 'styled-components/macro';\n\nexport const FieldDiv = styled.div`\n  position: relative;\n  background-color: ${props => props.isEven ? \"#fdf6e3\" : \"#eee8d5\"};\n  \n  // always keep board size rectangular and maximized to the smaller axis\n  @media (min-aspect-ratio: 99/100) {\n    width: 12.5vh;\n    height: 12.5vh;\n  }\n  @media (max-aspect-ratio: 100/99) {\n    width: 12.5vw;\n    height: 12.5vw;\n  }\n  \n  &.move-mark:before {\n    position: absolute;\n    top: 4%;\n    left: 4%;\n    bottom: 4%;\n    right: 4%;\n    content: '';\n    display: block;\n    border: 0.5vh solid ${props => props.markColor};\n    border-radius: 50%;\n  }\n`;\n\nconst Field = ({\n  boardIndex,\n  children,\n  movePiece,\n  isEven,\n  isStart,\n  isEnd,\n  isPossibleTarget\n}) => {\n  const [, dropRef] = useDrop({\n    accept: 'PIECE',\n    drop: (item, monitor) => {\n      movePiece(item.pieceId, item.boardIndex, boardIndex);\n    }\n  });\n\n  const fieldMarkStyle =\n    isStart || isEnd || isPossibleTarget ? 'move-mark' : '';\n\n  // prettier-ignore\n  const markColor = isPossibleTarget ? 'rgba(169,189,0,0.69)'\n                  : isStart ? '#dc322f9f'\n                  : isEnd ? '#dc322faf'\n                  : 'white';\n\n  return (\n    <FieldDiv\n      ref={dropRef}\n      isEven={isEven}\n      style={{ position: 'relative' }}\n      isStart={isStart}\n      markColor={markColor}\n      className={fieldMarkStyle}\n    >\n      {children}\n    </FieldDiv>\n  );\n};\n\nexport default Field;\n","/*\n * A free and open source chess game using AssemblyScript and React\n * Copyright (C) 2020 mhonert (https://github.com/mhonert)\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react';\nimport { useDrag } from 'react-dnd';\nimport styled from 'styled-components/macro';\n\nimport whitePawn from './img/white_pawn.svg';\nimport blackPawn from './img/black_pawn.svg';\nimport whiteKnight from './img/white_knight.svg';\nimport blackKnight from './img/black_knight.svg';\nimport whiteBishop from './img/white_bishop.svg';\nimport blackBishop from './img/black_bishop.svg';\nimport whiteRook from './img/white_rook.svg';\nimport blackRook from './img/black_rook.svg';\nimport whiteQueen from './img/white_queen.svg';\nimport blackQueen from './img/black_queen.svg';\nimport whiteKing from './img/white_king.svg';\nimport blackKing from './img/black_king.svg';\nimport { BLACK } from '../engine/constants';\n\nconst whiteImages = [\n  whitePawn,\n  whiteKnight,\n  whiteBishop,\n  whiteRook,\n  whiteQueen,\n  whiteKing\n];\n\nconst blackImages = [\n  blackPawn,\n  blackKnight,\n  blackBishop,\n  blackRook,\n  blackQueen,\n  blackKing\n];\n\nconst pieceNames = [ 'Pawn', 'Knight', 'Bishop', 'Rook', 'Queen', 'King' ]\n\nconst Image = styled.img`\n  display: block;\n  margin: 13%;\n  height: 74%;\n  width: 74%;\n\n  &.dragging {\n    visibility: hidden;\n  }\n  \n  // Workaround for wrong Drag'n'Drop preview image rendering in Chrome (see https://github.com/react-dnd/react-dnd/issues/832)\n  -webkit-transform: rotateZ(0deg);\n`;\n\nconst isFirefox = typeof InstallTrigger !== 'undefined';\n\nexport const PieceImage = ({color, pieceId, ...props}) => {\n  const img = color === BLACK ? blackImages[pieceId - 1] : whiteImages[pieceId - 1];\n  return <Image src={img} alt={pieceNames[pieceId - 1]} {...props} />;\n}\n\nconst Piece = ({ boardIndex, color, piece, onPickup, onDrop }) => {\n  const pieceId = Math.abs(piece);\n  const img = color === BLACK ? blackImages[pieceId - 1] : whiteImages[pieceId - 1];\n\n  const [{ isDragging }, drag] = useDrag({\n    item: {\n      type: 'PIECE',\n      pieceId,\n      boardIndex\n    },\n    begin: monitor => onPickup(boardIndex),\n    end: dropResult => onDrop(boardIndex),\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging()\n    })\n  });\n\n  const pieceImage =\n    <Image\n      ref={drag}\n      src={img}\n      className={isDragging ? 'dragging' : ''}\n    />;\n\n  // Workaround for wrong Drag'n'Drop preview image rendering in Firefox\n  return isFirefox\n    ?  <div ref={drag}>{pieceImage}</div>\n    : pieceImage;\n};\n\nexport default Piece;\n","/*\n * A free and open source chess game using AssemblyScript and React\n * Copyright (C) 2020 mhonert (https://github.com/mhonert)\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nexport const BLACK = -1;\nexport const WHITE = 1;\n\nexport const P = 1; // pawn\nexport const N = 2; // knight\nexport const B = 3; // bishop\nexport const R = 4; // rook\nexport const Q = 5; // queen\nexport const K = 6; // king\n","/*\n * A free and open source chess game using AssemblyScript and React\n * Copyright (C) 2020 mhonert (https://github.com/mhonert)\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react';\nimport Field from './Field';\nimport Piece from './Piece';\nimport styled from 'styled-components/macro';\nimport { BLACK, WHITE } from '../engine/constants';\n\nconst BoardGrid = styled.div`\n    display: grid;\n    grid-template-columns: repeat(8, 1fr);\n    grid-template-rows: repeat(8, 1fr);\n\n    @media (min-aspect-ratio: 99/100) {\n      width: 100vh;\n      height: 100vh;\n    }\n    @media (max-aspect-ratio: 100/99) {\n      width: 100vw;\n      height: 100vw;\n    }\n    \n    box-shadow: 3px 3px 3px #586e75;\n`;\n\nconst Board = ({board, isRotated, lastMove, currentPieceMoves, handlePlayerMove, updatePossibleMoves, clearPossibleMoves}) => {\n  return (\n    <BoardGrid isRotated={isRotated}>\n      {board.slice(0, 64).map((_, idx) => {\n        const rotatedIndex = isRotated ? 63 - idx : idx;\n        const item = board[rotatedIndex];\n\n        return (\n          <Field\n            key={rotatedIndex}\n            boardIndex={rotatedIndex}\n            movePiece={handlePlayerMove}\n            isEven={(rotatedIndex + (rotatedIndex >> 3)) % 2 === 0}\n            isStart={rotatedIndex === lastMove.start}\n            isEnd={rotatedIndex === lastMove.end}\n            isPossibleTarget={currentPieceMoves.has(rotatedIndex)}\n          >\n            {item !== 0 && (\n              <Piece\n                boardIndex={rotatedIndex}\n                color={item < 0 ? BLACK : WHITE}\n                piece={item}\n                onPickup={updatePossibleMoves}\n                onDrop={clearPossibleMoves}\n              />\n            )}\n          </Field>\n        );\n      })}\n    </BoardGrid>\n  );\n};\n\nexport default Board;","/*\n * A free and open source chess game using AssemblyScript and React\n * Copyright (C) 2020 mhonert (https://github.com/mhonert)\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react';\nimport styled from 'styled-components/macro';\nimport { WHITE } from '../engine/constants';\nimport AnimatedSpinner from './AnimatedSpinner';\nimport {\n  faBalanceScale,\n  faDiceFive,\n  faDiceFour,\n  faDiceOne,\n  faDiceThree,\n  faDiceTwo,\n  faExchangeAlt,\n  faMedal,\n  faPlus,\n  faRetweet,\n  faRobot,\n  faUndo\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst MenuBar = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 1rem;\n  margin-left: 1.5rem;\n  text-align: center;\n  align-items: center;\n\n  // center menubar below board, if window width is < window height\n  @media (max-aspect-ratio: 100/99) {\n    margin-left: auto;\n    margin-right: auto;\n    flex-flow: column-reverse;\n  }\n`;\n\nconst MenuItem = styled.div`\n  position: relative;\n  display: ${props => (props.hidden ? 'none' : 'flex')};\n  padding-bottom: 0.5rem;\n  flex-direction: column;\n  \n  @media (max-aspect-ratio: 100/99) {\n    flex-direction: row;\n    align-self: center;\n  }\n`;\n\nconst GameButton = styled.button`\n  background: white;\n  color: #073642;\n  border: 1px solid #073642;\n  border-radius: 0.3rem;\n  font-size: 1rem;\n  font-weight: bold;\n  padding: 0.5rem 0.4rem;\n  width: 2.5rem;\n  margin: 0.3rem;\n  box-shadow: 1px 1px 1px #073642;\n  \n  &[disabled] {\n    display: none;\n  }\n\n  & :hover {\n    background: #073642;\n    color: white;\n    cursor: pointer;\n  }\n`;\n\nconst GameResult = styled(MenuItem)`\n  margin-top: 0.3rem;\n  font-weight: bold;\n  font-size: 1.5rem;\n  color: #073642;\n  width: 100%;\n  align-items: center;\n  \n  svg {\n    margin-left: 1rem;\n    margin-right: 1rem;\n  }\n`;\n\nconst IconRadioInput = styled.input`\n  display: none;\n  \n  &:checked + label {\n    opacity: 1;\n  }\n`;\n\nconst IconRadioLabel = styled.label`\n  color: #073642;\n  margin: 0.2rem;\n  opacity: 0.2;\n  \n  & :hover {\n    opacity: 0.5;\n    cursor: pointer;\n  }\n`\n\nconst colorName = color => (color === WHITE ? 'White' : 'Black');\n\nconst getGameResultIcon = (winningPlayerColor, humanPlayerColor) => {\n  if (!winningPlayerColor) {\n    return faBalanceScale;\n  }\n\n  return winningPlayerColor === humanPlayerColor\n    ? faMedal\n    : faRobot;\n}\n\nconst GameMenu = ({\n  isAiThinking,\n  firstMovePlayed,\n  humanPlayerColor,\n  gameEnded,\n  winningPlayerColor,\n  startNewGame,\n  switchSides,\n  rotateBoard,\n  difficultyLevel,\n  setDifficultyLevel,\n  canUndoMove,\n  undoMove,\n}) => (\n  <MenuBar>\n    {gameEnded &&\n    <GameResult>\n      <FontAwesomeIcon icon={getGameResultIcon(winningPlayerColor, humanPlayerColor)} size=\"2x\" />\n      {winningPlayerColor ? colorName(winningPlayerColor) + ' wins!' : 'Draw!'}\n    </GameResult>\n    }\n\n    <MenuItem hidden={isAiThinking}>\n\n      <GameButton disabled={!firstMovePlayed} onClick={startNewGame}>\n        <FontAwesomeIcon icon={faPlus} title=\"Start new game\" />\n      </GameButton>\n\n      <GameButton disabled={gameEnded || firstMovePlayed} onClick={switchSides}>\n        <FontAwesomeIcon icon={faExchangeAlt} title=\"Switch sides\" />\n      </GameButton>\n\n      <GameButton disabled={!canUndoMove || gameEnded} onClick={undoMove}>\n        <FontAwesomeIcon icon={faUndo} title=\"Undo move\" />\n      </GameButton>\n\n      <GameButton disabled={gameEnded || !firstMovePlayed} onClick={rotateBoard}>\n        <FontAwesomeIcon icon={faRetweet} title=\"Rotate board\" />\n      </GameButton>\n\n    </MenuItem>\n\n    <MenuItem hidden={isAiThinking || gameEnded}>\n      <IconRadioButtons currentValue={difficultyLevel} name=\"difficulty-level\" onChange={setDifficultyLevel}\n                        options={[\n                          {value: 1, description: \"Difficulty level 1 (easy)\", icon: faDiceOne},\n                          {value: 2, description: \"Difficulty level 2\", icon: faDiceTwo},\n                          {value: 3, description: \"Difficulty level 3\", icon: faDiceThree},\n                          {value: 4, description: \"Difficulty level 4\", icon: faDiceFour},\n                          {value: 5, description: \"Difficulty level 5 (hard)\", icon: faDiceFive},\n                        ]} />\n    </MenuItem>\n\n    {isAiThinking && <AnimatedSpinner /> }\n\n  </MenuBar>\n);\n\nconst IconRadioButtons = ({currentValue, name, options, onChange}) => (\n  <>\n    {options.map(({value, description, icon}) => (\n      <React.Fragment key={`${name}-${value}`}>\n        <IconRadioInput type=\"radio\" id={`${name}-${value}`} name={name} value={value} defaultChecked={currentValue === value} onChange={(e) => onChange(e.target.value)} />\n        <IconRadioLabel htmlFor={`${name}-${value}`}>\n          <FontAwesomeIcon icon={icon} title={description} size=\"2x\" />\n        </IconRadioLabel>\n      </React.Fragment>\n      ))}\n  </>\n);\n\nexport default GameMenu;\n","/*\n * A free and open source chess game using AssemblyScript and React\n * Copyright (C) 2019 mhonert (https://github.com/mhonert)\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport styled from 'styled-components/macro';\nimport { B, BLACK, N, Q, R, WHITE } from '../engine/constants';\nimport { PieceImage } from './Piece';\nimport React from 'react';\n\nconst Overlay = styled.div`\n  outline: 1px solid #586e75;\n  box-shadow: 3px 3px 3px #586e75;\n  margin: 0;\n  padding: 0;\n  position: absolute;\n  z-index: 1;\n  \n  @media (min-aspect-ratio: 99/100) {\n    top: ${props => props.row * 12.5}vh;\n    left: ${props => props.column * 12.5}vh;\n    width: 12.5vh;\n    height: 50vh;\n  }\n  @media (max-aspect-ratio: 100/99) {\n    top: ${props => props.row * 12.5}vw;\n    left: ${props => props.column * 12.5}vw;\n    width: 12.5vw;\n    height: 50vw;\n  }\n`;\n\nconst FieldDiv = styled.div`\n  position: absolute;\n  background-color: ${props => props.isEven ? '#fdf6e3' : '#eee8d5'};\n  \n  @media (min-aspect-ratio: 99/100) {\n    top: ${props => props.row * 12.5}vh;\n    width: 12.5vh;\n    height: 12.5vh;\n  }\n  @media (max-aspect-ratio: 100/99) {\n    top: ${props => props.row * 12.5}vw;\n    width: 12.5vw;\n    height: 12.5vw;\n  }\n`;\n\nconst PromotionPieceSelection = ({ column, playerColor, onSelection, isRotated }) => {\n  const rotatedColumn = isRotated ? 7 - column : column;\n\n  const top = playerColor === WHITE\n    ? isRotated ? 4 : 0\n    : isRotated ? 0 : 4;\n\n  let pieces = (isRotated && playerColor !== BLACK) || (!isRotated && playerColor === BLACK) ? [N, B, R, Q] : [Q, R, B, N];\n\n  return (\n    <Overlay row={top} column={rotatedColumn}>\n      {\n        pieces.map((piece, index) => (\n          <FieldDiv key={index} row={index} isEven={(rotatedColumn + index) & 1} onClick={() => onSelection(piece)}>\n            <PieceImage color={playerColor} pieceId={piece}/>\n          </FieldDiv>\n        ))\n      }\n    </Overlay>\n  );\n\n};\n\nexport default PromotionPieceSelection;\n","/*\n * A free and open source chess game using AssemblyScript and React\n * Copyright (C) 2020 mhonert (https://github.com/mhonert)\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport styled from 'styled-components/macro';\n\nimport engineWorkerLoader from 'workerize-loader!../engine/engine.worker'; // eslint-disable-line import/no-webpack-loader-syntax\nimport { BLACK, P, WHITE } from '../engine/constants';\nimport AnimatedSpinner from './AnimatedSpinner';\nimport { Move } from '../engine/move';\nimport Board from './Board';\nimport GameMenu from './GameMenu';\nimport PromotionPieceSelection from './PromotionPieceSelection';\n\nconst engine = engineWorkerLoader();\n\nconst GameArea = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst startPosition = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1';\n\nconst nextPlayer = playerColor => -playerColor;\n\nconst Game = () => {\n  const [rotateBoard, setRotateBoard] = useState(false);\n  const [activePlayer, setActivePlayer] = useState(WHITE);\n  const [humanPlayerColor, setHumanPlayerColor] = useState(WHITE);\n  const [isAiTurn, setAiTurn] = useState(false);\n  const [board, setBoard] = useState();\n  const [gameEnded, setGameEnded] = useState(false);\n  const [availableMoves, setAvailableMoves] = useState([]);\n  const [currentPieceMoves, setCurrentPieceMoves] = useState(new Set());\n  const [winningPlayer, setWinningPlayer] = useState();\n  const [difficultyLevel, setDifficultyLevel] = useState(3);\n  const [moveHistory, setMoveHistory] = useState([]);\n  const [promotion, setPromotion] = useState(undefined);\n\n  const lastMove = moveHistory.length > 0 ? moveHistory[moveHistory.length - 1] : { start: -1, end: -1 };\n\n  const clearAvailableMoves = () => setAvailableMoves([]);\n\n  const addMove = useCallback(move => {\n    setMoveHistory([...moveHistory, move])\n  }, [setMoveHistory, moveHistory]);\n\n  const updateGame = useCallback(async state => {\n    setBoard(state.board);\n    setAvailableMoves(state.moves);\n    if (state.gameEnded) {\n      setGameEnded(true);\n\n      if (state.checkMate) {\n        setWinningPlayer(nextPlayer(state.activePlayer));\n      }\n    } else {\n      setActivePlayer(state.activePlayer);\n    }\n\n  }, []);\n\n  // Initialize chess engine and game state\n  useEffect(() => {\n    (async () => {\n      await engine.init();\n      await engine.newGame();\n      const gameState = await engine.setPosition(startPosition, []);\n      await updateGame(gameState);\n    })();\n  }, [updateGame]);\n\n  const canMove = useCallback((start, end) => {\n    return availableMoves.some(\n      move => move.start === start && move.end === end\n    );\n  }, [availableMoves]);\n\n  const calculateAIMove = useCallback(async () => {\n    clearAvailableMoves();\n    setAiTurn(true);\n\n    const move = await engine.calculateMove(difficultyLevel);\n\n    const gameState = await engine.performMove(move);\n    setAiTurn(false);\n    await updateGame(gameState);\n    addMove(move);\n  }, [difficultyLevel, addMove, updateGame]);\n\n  const switchSides = async () => {\n    setRotateBoard(true);\n    setHumanPlayerColor(-humanPlayerColor);\n    setAiTurn(true);\n  };\n\n  // Calculate next AI move whenever isAiTurn is set to true\n  useEffect( () => {\n    if (isAiTurn) {\n      (async () => {\n        await calculateAIMove();\n      })();\n    }\n  }, [isAiTurn, calculateAIMove]);\n\n  const startNewGame = async () => {\n    setGameEnded(false);\n    setWinningPlayer(undefined);\n    setActivePlayer(WHITE);\n    setHumanPlayerColor(WHITE);\n    setMoveHistory([]);\n    setCurrentPieceMoves(new Set());\n\n    await engine.newGame();\n    const gameState = await engine.setPosition(startPosition, []);\n    await updateGame(gameState);\n\n    setRotateBoard(false);\n  };\n\n  const undoMove = useCallback(async () => {\n    const previousMoveHistory = moveHistory.slice(0, moveHistory.length - 2);\n    const gameState = await engine.setPosition(startPosition, previousMoveHistory);\n    setMoveHistory(previousMoveHistory);\n    await updateGame(gameState);\n  }, [moveHistory, setMoveHistory, updateGame]);\n\n  const handlePlayerMove = useCallback(async (piece, start, end) => {\n    let pieceId = Math.abs(piece);\n    if (gameEnded || isAiTurn) {\n      return;\n    }\n\n    if (!canMove(start, end)) {\n      return;\n    }\n\n    setCurrentPieceMoves(new Set());\n\n    if (pieceId === P && ((activePlayer === WHITE && end < 8) || (activePlayer === BLACK && end >= 56))) {\n      // Promotion\n\n      clearAvailableMoves();\n      setPromotion({\n        start: start,\n        end: end,\n        column: end & 7,\n        color: activePlayer\n      });\n    } else {\n\n      // Standard move\n      const interimBoard = board.slice();\n      interimBoard[start] = 0;\n      setBoard(interimBoard);\n\n      const move = new Move(pieceId, start, end);\n      const gameState = await engine.performMove(move);\n      await updateGame(gameState);\n      addMove(move);\n\n      if (!gameState.gameEnded) {\n        setAiTurn(true);\n      }\n    }\n\n  }, [activePlayer, addMove, board, canMove, gameEnded, isAiTurn, updateGame]);\n\n  const handlePromotion = useCallback(async (pieceId) => {\n    const { start, end } = promotion;\n    setPromotion(undefined);\n    const interimBoard = board.slice();\n    interimBoard[start] = 0;\n    setBoard(interimBoard);\n\n    const move = new Move(pieceId, start, end);\n    const gameState = await engine.performMove(move);\n    await updateGame(gameState);\n    addMove(move);\n\n    if (!gameState.gameEnded) {\n      setAiTurn(true);\n    }\n  }, [addMove, board, promotion, setPromotion, updateGame]);\n\n  const updatePossibleMoves = start => {\n    const possibleMoves = availableMoves\n      .filter(move => move.start === start)\n      .map(move => move.end);\n    setCurrentPieceMoves(new Set(possibleMoves));\n  };\n\n  const clearPossibleMoves = () => {\n    setCurrentPieceMoves(new Set());\n  };\n\n  return (\n    board\n      ? (\n        <GameArea>\n          {promotion &&\n          <PromotionPieceSelection column={promotion.column} playerColor={promotion.color} isRotated={rotateBoard}\n                                   onSelection={handlePromotion}/>}\n          <Board\n            board={board}\n            isRotated={rotateBoard}\n            lastMove={lastMove}\n            currentPieceMoves={currentPieceMoves}\n            handlePlayerMove={handlePlayerMove}\n            updatePossibleMoves={updatePossibleMoves}\n            clearPossibleMoves={clearPossibleMoves}\n          />\n          <GameMenu\n            isAiThinking={isAiTurn}\n            firstMovePlayed={lastMove.start !== -1}\n            humanPlayerColor={humanPlayerColor}\n            gameEnded={gameEnded}\n            winningPlayerColor={winningPlayer}\n            startNewGame={startNewGame}\n            switchSides={switchSides}\n            rotateBoard={() => setRotateBoard(!rotateBoard)}\n            difficultyLevel={difficultyLevel}\n            setDifficultyLevel={setDifficultyLevel}\n            canUndoMove={!gameEnded && moveHistory.length > 1}\n            undoMove={undoMove}\n          />\n        </GameArea>\n      )\n      : (\n        <Centered><AnimatedSpinner/></Centered>\n      )\n  );\n};\n\nconst Centered = styled.div`\n  position: absolute;\n  left: calc(50% - 60px);\n  top: calc(50% - 60px);\n`;\n\nexport default Game;\n","/*\n * A free and open source chess game using AssemblyScript and React\n * Copyright (C) 2020 mhonert (https://github.com/mhonert)\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react';\nimport Game from './Game';\nimport { DndProvider } from 'react-dnd';\nimport HTML5Backend from 'react-dnd-html5-backend';\nimport TouchBackend from 'react-dnd-touch-backend';\n\nconst multiBackends = (...backendFactories) =>\n  function(manager) {\n    const backends = backendFactories.map(b => b(manager));\n    return {\n      setup: (...args) =>\n        backends.forEach(b => b.setup.apply(b, args)),\n      teardown: (...args) =>\n        backends.forEach(b => b.teardown.apply(b, args)),\n      connectDropTarget: (...args) =>\n        backends.forEach(b => b.connectDropTarget.apply(b, args)),\n      connectDragPreview: (...args) =>\n        backends.forEach(b => b.connectDragPreview.apply(b, args)),\n      connectDragSource: (...args) =>\n        backends.forEach(b => b.connectDragSource.apply(b, args)),\n    };\n  };\n\nfunction App() {\n  return (\n    <main>\n      <DndProvider backend={multiBackends(HTML5Backend, TouchBackend)}>\n        <Game />\n      </DndProvider>\n    </main>\n  );\n}\n\nexport default App;\n","/*\n * A free and open source chess game using AssemblyScript and React\n * Copyright (C) 2020 mhonert (https://github.com/mhonert)\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './ui/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}