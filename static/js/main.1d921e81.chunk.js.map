{"version":3,"sources":["engine/engine.worker.js","ui/img/white_pawn.svg","ui/img/black_pawn.svg","ui/img/white_knight.svg","ui/img/black_knight.svg","ui/img/white_bishop.svg","ui/img/black_bishop.svg","ui/img/white_rook.svg","ui/img/black_rook.svg","ui/img/white_queen.svg","ui/img/black_queen.svg","ui/img/white_king.svg","ui/img/black_king.svg","ui/Field.js","ui/Piece.js","ui/Board.js","engine/constants.js","ui/AnimatedSpinner.js","ui/GameMenu.js","engine/engine-wasm-interop.js","ui/Game.js","ui/App.js","index.js"],"names":["addMethods","methods","module","exports","w","Worker","name","FieldDiv","styled","div","props","markColor","Field","boardIndex","children","movePiece","isStart","isEnd","isPossibleTarget","useDrop","accept","drop","item","monitor","pieceId","dropRef","fieldMarkStyle","ref","style","position","className","whiteImages","whitePawn","whiteKnight","whiteBishop","whiteRook","whiteQueen","whiteKing","blackImages","blackPawn","blackKnight","blackBishop","blackRook","blackQueen","blackKing","pieceNames","PieceContainer","PieceImage","img","Piece","color","piece","onPickup","onDrop","Math","abs","useDrag","type","begin","end","dropResult","collect","isDragging","drag","src","alt","BoardGrid","Board","board","lastMove","currentPieceMoves","handlePlayerMove","updatePossibleMoves","clearPossibleMoves","map","idx","key","start","has","AnimatedSpinner","MenuBar","MenuItem","hidden","GameButton","button","Label","label","GameResult","GameMenu","isAiThinking","gameEnded","winningPlayerColor","startNewGame","forceAiMove","searchDepth","setSearchDepth","disabled","onClick","title","htmlFor","id","min","max","value","onChange","e","target","Engine","this","engine","instantiate","fetch","console","log","playerColor","depth","boardArray","__allocArray","INT32ARRAY_ID","boardPtr","__retain","moveEncoded","calculateMove","move","Move","fromEncodedMove","__release","newBoardPtr","performMove","encodedMove","newBoard","__getArray","movesPtr","generatePlayerMoves","moves","result","isCheckMate","engineWebWorker","engineWorkerLoader","initialBoard","GameArea","Game","useState","activePlayer","setActivePlayer","setAiThinking","setBoard","setGameEnded","setLastMove","generateMoves","availableMoves","setAvailableMoves","Set","setCurrentPieceMoves","winningPlayer","setWinningPlayer","handleAIMove","aiColor","availablePlayerMoves","length","some","canMove","prompt","toUpperCase","then","possibleMoves","filter","undefined","multiBackends","backendFactories","manager","backends","b","setup","args","forEach","apply","teardown","connectDropTarget","connectDragPreview","connectDragSource","App","DndProvider","backend","HTML5Backend","TouchBackend","a","async","init","ReactDOM","render","document","getElementById"],"mappings":"kFACI,IAAIA,EAAa,EAAQ,IACrBC,EAAU,CAAC,iBACfC,EAAOC,QAAU,WAChB,IAAIC,EAAI,IAAIC,OAAO,IAA0B,iCAAkC,CAAEC,KAAM,qBAGvF,OAFAN,EAAWI,EAAGH,GAEPG,I,mBCPZF,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,0C,mBCA3CD,EAAOC,QAAU,IAA0B,0C,mBCA3CD,EAAOC,QAAU,IAA0B,0C,mBCA3CD,EAAOC,QAAU,IAA0B,0C,mBCA3CD,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,yC,mBCA3CD,EAAOC,QAAU,IAA0B,yC,mBCA3CD,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,wC,oMCsBrCI,EAAWC,IAAOC,IAAV,kEAAGD,CAAH,uOAgBY,SAAAE,GAAK,OAAIA,EAAMC,aA2C1BC,EArCD,SAAC,GAOR,IANLC,EAMI,EANJA,WACAC,EAKI,EALJA,SACAC,EAII,EAJJA,UACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,MACAC,EACI,EADJA,iBACI,EACgBC,YAAQ,CAC1BC,OAAQ,QACRC,KAAM,SAACC,EAAMC,GACXR,EAAUO,EAAKE,QAASF,EAAKT,WAAYA,MAHpCY,EADL,oBAQEC,EACJV,GAAWC,GAASC,EAAmB,YAAc,GAGjDP,EAAYO,EAAmB,uBACnBF,EAAU,YACVC,EAAQ,YACR,QAElB,OACE,kBAACV,EAAD,CACEoB,IAAKF,EACLG,MAAO,CAAEC,SAAU,YACnBb,QAASA,EACTL,UAAWA,EACXmB,UAAWJ,GAEVZ,I,oNCzCDiB,EAAc,CAClBC,IACAC,IACAC,IACAC,IACAC,IACAC,KAGIC,EAAc,CAClBC,IACAC,IACAC,IACAC,IACAC,IACAC,KAGIC,EAAa,CAAE,OAAQ,SAAU,SAAU,OAAQ,QAAS,QAE5DC,EAAiBtC,IAAOC,IAAV,wEAAGD,CAAH,2CAKduC,EAAavC,IAAOwC,IAAV,oEAAGxC,CAAH,kFAwCDyC,EA7BD,SAAC,GAAoD,IAAlDpC,EAAiD,EAAjDA,WAAYqC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,OAC7C7B,EAAU8B,KAAKC,IAAIJ,GACnBH,EACM,UAAVE,EAAoBZ,EAAYd,EAAU,GAAKO,EAAYP,EAAU,GAHP,EAKjCgC,YAAQ,CACrClC,KAAM,CACJmC,KAAM,QACNjC,UACAX,cAEF6C,MAAO,SAAAnC,GAAO,OAAI6B,EAASvC,IAC3B8C,IAAK,SAAAC,GAAU,OAAIP,EAAOxC,IAC1BgD,QAAS,SAAAtC,GAAO,MAAK,CACnBuC,aAAcvC,EAAQuC,iBAdsC,mBAKvDA,EALuD,KAKvDA,WAAcC,EALyC,KAkBhE,OACE,kBAACjB,EAAD,CAAgBnB,IAAKoC,GACnB,kBAAChB,EAAD,CACEiB,IAAKhB,EACLiB,IAAKpB,EAAWrB,EAAU,GAC1BM,UAAWgC,EAAa,WAAa,OCtEvCI,EAAY1D,IAAOC,IAAV,uEAAGD,CAAH,iPAwDA2D,EArCD,SAAC,GAAqG,IAApGC,EAAmG,EAAnGA,MAAOC,EAA4F,EAA5FA,SAAUC,EAAkF,EAAlFA,kBAAmBC,EAA+D,EAA/DA,iBAAkBC,EAA6C,EAA7CA,oBAAqBC,EAAwB,EAAxBA,mBACzF,OACE,kBAACP,EAAD,KACGE,EAAMM,KAAI,SAACpD,EAAMqD,GAChB,OAAIA,EAAM,KAAO,GAAKA,GAAO,KAAOA,EAAM,GACjC,KC3BC,KD8BNrD,EACK,yBAAKsD,IAAKD,EAAK7C,UAAU,gBAIhC,kBAAC,EAAD,CACE8C,IAAKD,EACL9D,WAAY8D,EACZ5D,UAAWwD,EACXvD,QAAS2D,IAAQN,EAASQ,MAC1B5D,MAAO0D,IAAQN,EAASV,IACxBzC,iBAAkBoD,EAAkBQ,IAAIH,IAE9B,IAATrD,GACC,kBAAC,EAAD,CACET,WAAY8D,EACZzB,MAAO5B,EAAO,EAAI,QAAU,QAC5B6B,MAAO7B,EACP8B,SAAUoB,EACVnB,OAAQoB,UEhDlBM,EAAkBvE,IAAOC,IAAV,sEAAGD,CAAH,+oCAoFN,oBACb,kBAACuE,EAAD,KACE,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,gCChGEC,EAAUxE,IAAOC,IAAV,wEAAGD,CAAH,mKAcPyE,EAAWzE,IAAOC,IAAV,yEAAGD,CAAH,4EAED,SAAAE,GAAK,OAAKA,EAAMwE,OAAS,OAAS,UAKzCC,EAAa3E,IAAO4E,OAAV,2EAAG5E,CAAH,oOAkBV6E,GAAQ7E,IAAO8E,MAAV,sEAAG9E,CAAH,+FASL+E,GAAa/E,YAAOyE,GAAV,2EAAGzE,CAAH,wEAgEDgF,GAtDE,SAAC,GAQX,IAPLC,EAOI,EAPJA,aACAC,EAMI,EANJA,UACAC,EAKI,EALJA,mBACAC,EAII,EAJJA,aACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,YACAC,EACI,EADJA,eAEA,OACE,kBAACf,EAAD,KAEE,kBAACC,EAAD,CAAUC,OAAQO,GAChB,kBAACN,EAAD,CAAYa,SAAUP,EAAcQ,QAASL,GAA7C,aAKF,kBAACX,EAAD,CAAUC,OAAQO,GAAgBC,GAChC,kBAACP,EAAD,CACEa,SAAUP,GAAgBC,EAC1BO,QAASJ,EACTK,MAAM,uCAHR,kBASF,kBAACjB,EAAD,CAAUC,OAAQO,GAChB,kBAACJ,GAAD,CAAOc,QAAQ,+BAAf,cACA,2BACEC,GAAG,8BACH3C,KAAK,QACL4C,IAAI,IACJC,IAAI,IACJJ,MAAM,aACNK,MAAOT,EACPU,SAAU,SAAAC,GAAC,OAAIV,EAAeU,EAAEC,OAAOH,WAI1Cd,GAAgB,kBAAC,EAAD,MAEhBC,GACC,kBAACH,GAAD,KACGI,GF3GU,IE4GGA,EAhDsB,QAAU,SAgDV,SAChC,gB,2BC1GRgB,G,uKAEEC,KAAKC,O,2EAGWC,uBAAYC,MAAM,mB,OAAtCH,KAAKC,O,OACLG,QAAQC,IAAI,sB,qFAGA7C,EAAO8C,EAAaC,GAChCH,QAAQC,IAAI,iCAEZ,IAAMG,EAAcR,KAAKC,OAAOQ,aAAaT,KAAKC,OAAOS,cAAelD,GAClEmD,EAAWX,KAAKC,OAAOW,SAASJ,GAEhCK,EAAcb,KAAKC,OAAOa,cAAcH,EAAUL,EAAaC,GAE/DQ,EAAOC,GAAKC,gBAAgBJ,GAMlC,OAJAb,KAAKC,OAAOiB,UAAUP,GAEtBP,QAAQC,IAAI,wBAELU,I,kCAGGvD,EAAOuD,GACjB,IAAMP,EAAcR,KAAKC,OAAOQ,aAAaT,KAAKC,OAAOS,cAAelD,GAClEmD,EAAWX,KAAKC,OAAOW,SAASJ,GAEhCW,EAAcnB,KAAKC,OAAOmB,YAAYT,EAAUI,EAAKM,aAErDC,EAAWtB,KAAKC,OAAOsB,WAAWJ,GAKxC,OAHAnB,KAAKC,OAAOiB,UAAUP,GACtBX,KAAKC,OAAOiB,UAAUC,GAEfG,I,oCAGK9D,EAAO8C,GACnB,IAAME,EAAcR,KAAKC,OAAOQ,aAAaT,KAAKC,OAAOS,cAAelD,GAClEmD,EAAWX,KAAKC,OAAOW,SAASJ,GAEhCgB,EAAWxB,KAAKC,OAAOwB,oBAAoBd,EAAUL,GAErDoB,EAAQ1B,KAAKC,OAAOsB,WAAWC,GAKrC,OAHAxB,KAAKC,OAAOiB,UAAUM,GACtBxB,KAAKC,OAAOiB,UAAUP,GAEfe,EAAM5D,IAAIkD,GAAKC,mB,kCAGZzD,EAAO8C,GACjB,IAAME,EAAcR,KAAKC,OAAOQ,aAAaT,KAAKC,OAAOS,cAAelD,GAClEmD,EAAWX,KAAKC,OAAOW,SAASJ,GAEhCmB,EAAS3B,KAAKC,OAAO2B,YAAYjB,EAAUL,GAIjD,OAFAN,KAAKC,OAAOiB,UAAUP,GAEfgB,M,KAIEX,GAAb,WACE,WAAYzE,EAAO0B,EAAOlB,GAAM,qBAC9BiD,KAAKzD,MAAQA,EACbyD,KAAK/B,MAAQA,EACb+B,KAAKjD,IAAMA,EACXiD,KAAKqB,YAAc9E,EAAS0B,GAAS,EAAMlB,GAAO,GALtD,kEAQyBsE,GAKrB,OAAO,IAAIL,EAJiB,EAAdK,EACCA,GAAe,EAAK,IACtBA,GAAe,GAAM,SAXtC,KAiBe,OAAItB,GC9Eb8B,GAAkBC,MAIlBC,GAAe,CJVH,gEAKD,GAFA,GACA,GAEA,GACA,GAHA,GADA,GAEA,EALC,OAED,uBAFC,MIeX,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EJfjB,MIgBX,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EJhBjB,MIiBX,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EJjBjB,MIkBX,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EJlBjB,MAED,gBAFC,MAKD,EAFA,EACA,EAEA,EACA,EAHA,EADA,EAEA,EALC,+DIQG,GAiBfC,GAAWpI,IAAOC,IAAV,gEAAGD,CAAH,kCAmKCqI,GA9JF,WAAO,IAAD,EACuBC,mBJjCrB,GIgCF,mBACVC,EADU,KACIC,EADJ,OAEqBF,oBAAS,GAF9B,mBAEVrD,EAFU,KAEIwD,EAFJ,OAGSH,mBAASH,IAHlB,mBAGVvE,EAHU,KAGH8E,EAHG,OAIiBJ,oBAAS,GAJ1B,mBAIVpD,EAJU,KAICyD,EAJD,OAKeL,mBAAS,CAAEjE,OAAQ,EAAGlB,KAAM,IAL3C,mBAKVU,EALU,KAKA+E,EALA,OAM2BN,mBAASjC,GAAOwC,cAAcjF,EAAO2E,IANhE,mBAMVO,EANU,KAMMC,EANN,OAOiCT,mBAAS,IAAIU,KAP9C,mBAOVlF,EAPU,KAOSmF,EAPT,OAQyBX,qBARzB,mBAQVY,EARU,KAQKC,EARL,OASqBb,mBAAS,GAT9B,mBASVhD,EATU,KASGC,EATH,KAeX6D,EAAe,SAACxF,EAAOuD,EAAMkC,GACjCZ,GAAc,GAEdG,EAAYzB,GAEZ,IAAMO,EAAWrB,GAAOmB,YAAY5D,EAAOuD,GAG3C,GAFAuB,EAAShB,GAELrB,GAAO2B,YAAYN,GAAW2B,GAIhC,OAHAV,GAAa,QACbQ,EAAiBE,GAKnB,IAAMC,EAAuBjD,GAAOwC,cAAcnB,GAAW2B,IAC7DN,EAAkBO,GAEkB,IAAhCA,EAAqBC,QAMzBf,GAA2Ba,GALzBV,GAAa,IAqGjB,OACE,kBAACP,GAAD,KACE,kBAAC,EAAD,CACExE,MAAOA,EACPC,SAAUA,EACVC,kBAAmBA,EACnBC,iBA5EmB,SAACpB,EAAO0B,EAAOlB,GACtC,IAAInC,EAAU8B,KAAKC,IAAIJ,GACvB,IAAIuC,IAAaD,GAzBH,SAACZ,EAAOlB,GACtB,OAAO2F,EAAeU,MACpB,SAAArC,GAAI,OAAIA,EAAK9C,QAAUA,GAAS8C,EAAKhE,MAAQA,KA2B1CsG,CAAQpF,EAAOlB,GAApB,CAOA,GAHAyF,EAAY,CAAEvE,QAAOlB,QJvGR,II0GTnC,IJ9Ga,II8GMuH,GAA0BpF,EAAM,KJ/GtC,II+G8CoF,GAA0BpF,EAAM,IAG7F,OADeuG,OAAO,gCAAiC,KACxCC,eACb,IAAK,IACH3I,EJ5GO,EI6GP,MACF,IAAK,IACHA,EJhHO,EIiHP,MACF,IAAK,IACHA,EJhHO,EIiHP,MACF,IAAK,IACL,QACEA,EJrHO,EI0Hb,IAAM0G,EAAWrB,GAAOmB,YAAY5D,EAAO,IAAIwD,GAAKpG,EAASqD,EAAOlB,IAGpE,GAFAuF,EAAShB,GAELrB,GAAO2B,YAAYN,GAAWa,GAIhC,OAHAI,GAAa,QACbQ,EAAiBZ,GAOE,IAFPlC,GAAOwC,cAAcnB,GAAWa,GAEpCgB,QAKVd,GAAc,GAxGkBM,EAAkB,IA0GlDd,GACGf,cAAcQ,GAAWa,EAAcjD,GACvCsE,MAAK,SAAAzC,GAAI,OAAIiC,EAAa1B,EAAUP,GAAOoB,MAE9CC,GAAiBD,IAVfI,GAAa,KA+BX3E,oBAlBsB,SAAAK,GAC1B,IAAMwF,EAAgBf,EACnBgB,QAAO,SAAA3C,GAAI,OAAIA,EAAK9C,QAAUA,KAC9BH,KAAI,SAAAiD,GAAI,OAAIA,EAAKhE,OACpB8F,EAAqB,IAAID,IAAIa,KAezB5F,mBAZqB,WACzBgF,EAAqB,IAAID,QAavB,kBAAC,GAAD,CACE/D,aAAcA,EACdC,UAAWA,EACXC,mBAAoB+D,EACpB9D,aA9Fe,WACnBsD,EAASP,IACTK,EJzFiB,GI0FjBG,GAAa,GACbC,EAAY,CAAEvE,OAAQ,EAAGlB,KAAM,IAC/BgG,OAAiBY,GACjBhB,EAAkB1C,GAAOwC,cAAcV,GAAcI,IACrDU,EAAqB,IAAID,MAwFrB3D,YAtGc,WAClBoD,GAAc,GACdR,GACGf,cAActD,EAAO2E,EAAcjD,GACnCsE,MAAK,SAAAzC,GAAI,OAAIiC,EAAaxF,EAAOuD,EAAMoB,OAmGtCjD,YAAaA,EACbC,eAAgBA,M,2BCnLlByE,GAAgB,sCAAIC,EAAJ,yBAAIA,EAAJ,uBACpB,SAASC,GACP,IAAMC,EAAWF,EAAiB/F,KAAI,SAAAkG,GAAC,OAAIA,EAAEF,MAC7C,MAAO,CACLG,MAAO,sCAAIC,EAAJ,yBAAIA,EAAJ,uBACLH,EAASI,SAAQ,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,MAAMJ,EAAGE,OACzCG,SAAU,sCAAIH,EAAJ,yBAAIA,EAAJ,uBACRH,EAASI,SAAQ,SAAAH,GAAC,OAAIA,EAAEK,SAASD,MAAMJ,EAAGE,OAC5CI,kBAAmB,sCAAIJ,EAAJ,yBAAIA,EAAJ,uBACjBH,EAASI,SAAQ,SAAAH,GAAC,OAAIA,EAAEM,kBAAkBF,MAAMJ,EAAGE,OACrDK,mBAAoB,sCAAIL,EAAJ,yBAAIA,EAAJ,uBAClBH,EAASI,SAAQ,SAAAH,GAAC,OAAIA,EAAEO,mBAAmBH,MAAMJ,EAAGE,OACtDM,kBAAmB,sCAAIN,EAAJ,yBAAIA,EAAJ,uBACjBH,EAASI,SAAQ,SAAAH,GAAC,OAAIA,EAAEQ,kBAAkBJ,MAAMJ,EAAGE,UAc5CO,OAVf,WACE,OACE,8BACE,kBAACC,GAAA,EAAD,CAAaC,QAASf,GAAcgB,KAAcC,OAChD,kBAAC,GAAD,SCrBP,EAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACO7E,GAAO+E,QADd,OAECC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SAFlD,uC","file":"static/js/main.1d921e81.chunk.js","sourcesContent":["\n\t\t\t\tvar addMethods = require(\"../../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = [\"calculateMove\"]\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"0fc64d1d64a10ab2b433.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t","module.exports = __webpack_public_path__ + \"static/media/white_pawn.41da1b5b.svg\";","module.exports = __webpack_public_path__ + \"static/media/black_pawn.3cab4671.svg\";","module.exports = __webpack_public_path__ + \"static/media/white_knight.3ece5029.svg\";","module.exports = __webpack_public_path__ + \"static/media/black_knight.88ad52be.svg\";","module.exports = __webpack_public_path__ + \"static/media/white_bishop.36a96cf8.svg\";","module.exports = __webpack_public_path__ + \"static/media/black_bishop.341337f4.svg\";","module.exports = __webpack_public_path__ + \"static/media/white_rook.007b43f5.svg\";","module.exports = __webpack_public_path__ + \"static/media/black_rook.e7f61dec.svg\";","module.exports = __webpack_public_path__ + \"static/media/white_queen.51d538db.svg\";","module.exports = __webpack_public_path__ + \"static/media/black_queen.87612c77.svg\";","module.exports = __webpack_public_path__ + \"static/media/white_king.9e716b1e.svg\";","module.exports = __webpack_public_path__ + \"static/media/black_king.12ae1430.svg\";","/*\n * A free and open source chess game using AssemblyScript and React\n * Copyright (C) 2019 mhonert (https://github.com/mhonert)\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react';\nimport { useDrop } from 'react-dnd';\nimport styled from 'styled-components/macro';\n\nconst FieldDiv = styled.div`\n  position: relative;\n  background-color: #fdf6e3;\n  \n  &:nth-child(even) {\n    background-color: #eee8d5;\n  }\n\n  &.move-mark:before {\n    position: absolute;\n    top: 4%;\n    left: 4%;\n    bottom: 4%;\n    right: 4%;\n    content: '';\n    display: block;\n    border: 0.5vh solid ${props => props.markColor};\n    border-radius: 50%;\n    //box-shadow: 0px 0px 1px ${props => props.markColor};\n  }\n`;\n\nconst Field = ({\n  boardIndex,\n  children,\n  movePiece,\n  isStart,\n  isEnd,\n  isPossibleTarget\n}) => {\n  const [, dropRef] = useDrop({\n    accept: 'PIECE',\n    drop: (item, monitor) => {\n      movePiece(item.pieceId, item.boardIndex, boardIndex);\n    }\n  });\n\n  const fieldMarkStyle =\n    isStart || isEnd || isPossibleTarget ? 'move-mark' : '';\n\n  // prettier-ignore\n  const markColor = isPossibleTarget ? 'rgba(169,189,0,0.69)'\n                  : isStart ? '#dc322f9f'\n                  : isEnd ? '#dc322faf'\n                  : 'white';\n\n  return (\n    <FieldDiv\n      ref={dropRef}\n      style={{ position: 'relative' }}\n      isStart={isStart}\n      markColor={markColor}\n      className={fieldMarkStyle}\n    >\n      {children}\n    </FieldDiv>\n  );\n};\n\nexport default Field;\n","/*\n * A free and open source chess game using AssemblyScript and React\n * Copyright (C) 2019 mhonert (https://github.com/mhonert)\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react';\nimport { useDrag } from 'react-dnd';\nimport styled from 'styled-components/macro';\n\nimport whitePawn from './img/white_pawn.svg';\nimport blackPawn from './img/black_pawn.svg';\nimport whiteKnight from './img/white_knight.svg';\nimport blackKnight from './img/black_knight.svg';\nimport whiteBishop from './img/white_bishop.svg';\nimport blackBishop from './img/black_bishop.svg';\nimport whiteRook from './img/white_rook.svg';\nimport blackRook from './img/black_rook.svg';\nimport whiteQueen from './img/white_queen.svg';\nimport blackQueen from './img/black_queen.svg';\nimport whiteKing from './img/white_king.svg';\nimport blackKing from './img/black_king.svg';\n\nconst whiteImages = [\n  whitePawn,\n  whiteKnight,\n  whiteBishop,\n  whiteRook,\n  whiteQueen,\n  whiteKing\n];\n\nconst blackImages = [\n  blackPawn,\n  blackKnight,\n  blackBishop,\n  blackRook,\n  blackQueen,\n  blackKing\n];\n\nconst pieceNames = [ 'Pawn', 'Knight', 'Bishop', 'Rook', 'Queen', 'King' ]\n\nconst PieceContainer = styled.div`\n  // Workaround for wrong Drag'n'Drop preview image rendering in Chrome (see https://github.com/react-dnd/react-dnd/issues/832)\n  -webkit-transform: translate3d(0, 0, 0);\n`;\n\nconst PieceImage = styled.img`\n  display: block;\n  margin: 13%;\n  height: 74%;\n  width: 74%;\n\n  &.dragging {\n    visibility: hidden;\n  }\n`;\n\nconst Piece = ({ boardIndex, color, piece, onPickup, onDrop }) => {\n  const pieceId = Math.abs(piece);\n  const img =\n    color === 'black' ? blackImages[pieceId - 1] : whiteImages[pieceId - 1];\n\n  const [{ isDragging }, drag] = useDrag({\n    item: {\n      type: 'PIECE',\n      pieceId,\n      boardIndex\n    },\n    begin: monitor => onPickup(boardIndex),\n    end: dropResult => onDrop(boardIndex),\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging()\n    })\n  });\n\n  return (\n    <PieceContainer ref={drag}>\n      <PieceImage\n        src={img}\n        alt={pieceNames[pieceId - 1]}\n        className={isDragging ? 'dragging' : ''}\n      />\n    </PieceContainer>\n  );\n};\n\nexport default Piece;\n","/*\n * A free and open source chess game using AssemblyScript and React\n * Copyright (C) 2019 mhonert (https://github.com/mhonert)\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react';\nimport { __ } from '../engine/constants';\nimport Field from './Field';\nimport Piece from './Piece';\nimport styled from 'styled-components/macro';\n\nconst BoardGrid = styled.div`\n    display: grid;\n    grid-template-columns: 0 repeat(8, 1fr);\n    grid-template-rows: 0 repeat(8, 1fr);\n\n    //border-right: 3px outset #586e75;\n    box-shadow: 3px 3px 3px #586e75;\n    \n    // always keep board size rectangular and maximized to the smaller axis\n    @media (min-aspect-ratio: 99/100) {\n          width: 100vh;\n          height: 100vh;\n    }\n    @media (max-aspect-ratio: 100/99) {\n          width: 100vw;\n          height: 100vw;\n    }\n`;\n\nconst Board = ({board, lastMove, currentPieceMoves, handlePlayerMove, updatePossibleMoves, clearPossibleMoves}) => {\n  return (\n    <BoardGrid>\n      {board.map((item, idx) => {\n        if (idx % 10 === 9 || idx >= 100 || idx < 10) {\n          return null; // skip\n        }\n\n        if (item === __) {\n          return <div key={idx} className=\"board_frame\" />;\n        }\n\n        return (\n          <Field\n            key={idx}\n            boardIndex={idx}\n            movePiece={handlePlayerMove}\n            isStart={idx === lastMove.start}\n            isEnd={idx === lastMove.end}\n            isPossibleTarget={currentPieceMoves.has(idx)}\n          >\n            {item !== 0 && (\n              <Piece\n                boardIndex={idx}\n                color={item < 0 ? 'black' : 'white'}\n                piece={item}\n                onPickup={updatePossibleMoves}\n                onDrop={clearPossibleMoves}\n              />\n            )}\n          </Field>\n        );\n      })}\n    </BoardGrid>\n  );\n};\n\nexport default Board;","/*\n * A free and open source chess game using AssemblyScript and React\n * Copyright (C) 2019 mhonert (https://github.com/mhonert)\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nexport const BLACK = -1;\nexport const WHITE = 1;\n\nexport const __ = 99; // board border\n\nexport const P = 1; // pawn\nexport const N = 2; // knight\nexport const B = 3; // bishop\nexport const R = 4; // rook\nexport const Q = 5; // queen\nexport const K = 6; // king\n","/*\n * A free and open source chess game using AssemblyScript and React\n * Copyright (C) 2019 mhonert (https://github.com/mhonert)\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport styled from 'styled-components/macro';\nimport React from 'react';\n\n/* Animated spinner adapted from https://loading.io/css/ */\nconst AnimatedSpinner = styled.div`\n  color: #073642;\n  display: inline-block;\n  position: relative;\n  width: 80px;\n  height: 80px;\n  \n  margin-top: 2rem;\n  margin-right: 3rem;\n  margin-left: 3rem;\n  \n  div {\n    transform-origin: 40px 40px;\n    animation: lds-spinner 1.2s linear infinite;\n  }\n  div:after {\n    content: \" \";\n    display: block;\n    position: absolute;\n    top: 3px;\n    left: 37px;\n    width: 6px;\n    height: 18px;\n    border-radius: 20%;\n    background: #073642;\n  }\n  div:nth-child(1) {\n    transform: rotate(0deg);\n    animation-delay: -1.1s;\n  }\n  div:nth-child(2) {\n    transform: rotate(30deg);\n    animation-delay: -1s;\n  }\n  div:nth-child(3) {\n    transform: rotate(60deg);\n    animation-delay: -0.9s;\n  }\n  div:nth-child(4) {\n    transform: rotate(90deg);\n    animation-delay: -0.8s;\n  }\n  div:nth-child(5) {\n    transform: rotate(120deg);\n    animation-delay: -0.7s;\n  }\n  div:nth-child(6) {\n    transform: rotate(150deg);\n    animation-delay: -0.6s;\n  }\n  div:nth-child(7) {\n    transform: rotate(180deg);\n    animation-delay: -0.5s;\n  }\n  div:nth-child(8) {\n    transform: rotate(210deg);\n    animation-delay: -0.4s;\n  }\n  div:nth-child(9) {\n    transform: rotate(240deg);\n    animation-delay: -0.3s;\n  }\n  div:nth-child(10) {\n    transform: rotate(270deg);\n    animation-delay: -0.2s;\n  }\n  div:nth-child(11) {\n    transform: rotate(300deg);\n    animation-delay: -0.1s;\n  }\n  div:nth-child(12) {\n    transform: rotate(330deg);\n    animation-delay: 0s;\n  }\n  @keyframes lds-spinner {\n    0% {\n      opacity: 1;\n    }\n    100% {\n      opacity: 0;\n    }\n  }\n`\n\nexport default () => (\n  <AnimatedSpinner>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n  </AnimatedSpinner>\n);\n","/*\n * A free and open source chess game using AssemblyScript and React\n * Copyright (C) 2019 mhonert (https://github.com/mhonert)\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react';\nimport styled from 'styled-components/macro';\nimport { WHITE } from '../engine/constants';\nimport AnimatedSpinner from './AnimatedSpinner';\n\nconst MenuBar = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 1.5rem;\n  margin-left: 2rem;\n  text-align: center;\n\n  // center menubar below board, if window width is < window height\n  @media (max-aspect-ratio: 100/99) {\n    margin-left: auto;\n    margin-right: auto;\n  }\n`;\n\nconst MenuItem = styled.div`\n  position: relative;\n  display: ${props => (props.hidden ? 'none' : 'flex')};\n  align-self: center;\n  padding-bottom: 0.5rem;\n`;\n\nconst GameButton = styled.button`\n  background: white;\n  color: #073642;\n  border: 1px solid #073642;\n  border-radius: 0.3rem;\n  font-size: 1rem;\n  font-weight: bold;\n  padding: 0.5rem;\n  width: 11rem;\n  box-shadow: 1px 1px 1px #073642;\n\n  & :hover {\n    background: #073642;\n    color: white;\n    cursor: pointer;\n  }\n`;\n\nconst Label = styled.label`\n  position: absolute;\n  top: 1.3rem;\n  width: 100%;\n  text-align: center;\n  font-size: 0.8rem;\n  color: #073642;\n`;\n\nconst GameResult = styled(MenuItem)`\n  padding-top: 2rem;\n  font-weight: bold;\n  font-size: 1.5rem;\n  color: #dc322f;\n;\n`;\n\nconst colorName = color => (color === WHITE ? 'White' : 'Black');\n\nconst GameMenu = ({\n  isAiThinking,\n  gameEnded,\n  winningPlayerColor,\n  startNewGame,\n  forceAiMove,\n  searchDepth,\n  setSearchDepth\n}) => {\n  return (\n    <MenuBar>\n\n      <MenuItem hidden={isAiThinking}>\n        <GameButton disabled={isAiThinking} onClick={startNewGame}>\n          New Game\n        </GameButton>\n      </MenuItem>\n\n      <MenuItem hidden={isAiThinking || gameEnded}>\n        <GameButton\n          disabled={isAiThinking || gameEnded}\n          onClick={forceAiMove}\n          title=\"Let computer play the current color\"\n        >\n          Computer Move\n        </GameButton>\n      </MenuItem>\n\n      <MenuItem hidden={isAiThinking}>\n        <Label htmlFor=\"game-menu_difficulty-slider\">Difficulty</Label>\n        <input\n          id=\"game-menu_difficulty-slider\"\n          type=\"range\"\n          min=\"4\"\n          max=\"6\"\n          title=\"Difficulty\"\n          value={searchDepth}\n          onChange={e => setSearchDepth(e.target.value)}\n        />\n      </MenuItem>\n\n      {isAiThinking && <AnimatedSpinner /> }\n\n      {gameEnded && (\n        <GameResult>\n          {winningPlayerColor\n            ? colorName(winningPlayerColor) + ' wins!'\n            : 'Stalemate!'}\n        </GameResult>\n      )}\n    </MenuBar>\n  );\n};\n\nexport default GameMenu;\n","/*\n * A free and open source chess game using AssemblyScript and React\n * Copyright (C) 2019 mhonert (https://github.com/mhonert)\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {instantiate} from \"assemblyscript/lib/loader\";\n\n\n// Loads and interacts with the wasm engine.\nclass Engine {\n  async init() {\n    if (this.engine) {\n      return; // already initialized\n    }\n    this.engine = await instantiate(fetch(\"./as-api.wasm\"));\n    console.log(\"Engine initialized\");\n  };\n\n  calculateMove(board, playerColor, depth) {\n    console.log('Start calculation of move ...');\n\n    const boardArray  = this.engine.__allocArray(this.engine.INT32ARRAY_ID, board);\n    const boardPtr = this.engine.__retain(boardArray);\n\n    const moveEncoded = this.engine.calculateMove(boardPtr, playerColor, depth);\n\n    const move = Move.fromEncodedMove(moveEncoded);\n\n    this.engine.__release(boardPtr);\n\n    console.log('Calculation finished');\n\n    return move;\n  }\n\n  performMove(board, move) {\n    const boardArray  = this.engine.__allocArray(this.engine.INT32ARRAY_ID, board);\n    const boardPtr = this.engine.__retain(boardArray);\n\n    const newBoardPtr = this.engine.performMove(boardPtr, move.encodedMove);\n\n    const newBoard = this.engine.__getArray(newBoardPtr);\n\n    this.engine.__release(boardPtr);\n    this.engine.__release(newBoardPtr);\n\n    return newBoard;\n  }\n\n  generateMoves(board, playerColor) {\n    const boardArray  = this.engine.__allocArray(this.engine.INT32ARRAY_ID, board);\n    const boardPtr = this.engine.__retain(boardArray);\n\n    const movesPtr = this.engine.generatePlayerMoves(boardPtr, playerColor);\n\n    const moves = this.engine.__getArray(movesPtr);\n\n    this.engine.__release(movesPtr);\n    this.engine.__release(boardPtr);\n\n    return moves.map(Move.fromEncodedMove);\n  }\n\n  isCheckMate(board, playerColor) {\n    const boardArray  = this.engine.__allocArray(this.engine.INT32ARRAY_ID, board);\n    const boardPtr = this.engine.__retain(boardArray);\n\n    const result = this.engine.isCheckMate(boardPtr, playerColor);\n\n    this.engine.__release(boardPtr);\n\n    return result;\n  }\n}\n\nexport class Move {\n  constructor(piece, start, end) {\n    this.piece = piece;\n    this.start = start;\n    this.end = end;\n    this.encodedMove = piece | (start << 3) | (end << 10);\n  }\n\n  static fromEncodedMove(encodedMove) {\n    const piece = encodedMove & 0x7; // Bits 0-2\n    const start = (encodedMove >> 3) & 0x7F; // Bits 3-10\n    const end = (encodedMove >> 10) & 0x7F; // Bit 10-17\n\n    return new Move(piece, start, end);\n  }\n}\n\nexport default new Engine();\n\n","/*\n * A free and open source chess game using AssemblyScript and React\n * Copyright (C) 2019 mhonert (https://github.com/mhonert)\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components/macro';\n\nimport engineWorkerLoader from 'workerize-loader!../engine/engine.worker'; // eslint-disable-line import/no-webpack-loader-syntax\nimport { __, B, BLACK, K, N, P, Q, R, WHITE } from '../engine/constants';\nimport Board from './Board';\nimport GameMenu from './GameMenu';\nimport engine, { Move } from '../engine/engine-wasm-interop';\n\nconst engineWebWorker = engineWorkerLoader();\n\nconst initialState = 0;\n\nconst initialBoard = [\n  __, __, __, __, __, __, __, __, __, __,\n  __, __, __, __, __, __, __, __, __, __,\n  __, -R, -N, -B, -Q, -K, -B, -N, -R, __,\n  __, -P, -P, -P, -P, -P, -P, -P, -P, __,\n  __,  0,  0,  0,  0,  0,  0,  0,  0, __,\n  __,  0,  0,  0,  0,  0,  0,  0,  0, __,\n  __,  0,  0,  0,  0,  0,  0,  0,  0, __,\n  __,  0,  0,  0,  0,  0,  0,  0,  0, __,\n  __,  P,  P,  P,  P,  P,  P,  P,  P, __,\n  __,  R,  N,  B,  Q,  K,  B,  N,  R, __,\n  __, __, __, __, __, __, __, __, __, __,\n  __, __, __, __, __, __, __, __, __, __, initialState\n];\n\nconst GameArea = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Game = () => {\n  const [activePlayer, setActivePlayer] = useState(WHITE);\n  const [isAiThinking, setAiThinking] = useState(false);\n  const [board, setBoard] = useState(initialBoard);\n  const [gameEnded, setGameEnded] = useState(false);\n  const [lastMove, setLastMove] = useState({ start: -1, end: -1 });\n  const [availableMoves, setAvailableMoves] = useState(engine.generateMoves(board, activePlayer));\n  const [currentPieceMoves, setCurrentPieceMoves] = useState(new Set());\n  const [winningPlayer, setWinningPlayer] = useState();\n  const [searchDepth, setSearchDepth] = useState(5);\n\n  const clearAvailableMoves = () => setAvailableMoves([]);\n\n  const nextPlayer = playerColor => -playerColor;\n\n  const handleAIMove = (board, move, aiColor) => {\n    setAiThinking(false);\n\n    setLastMove(move);\n\n    const newBoard = engine.performMove(board, move);\n    setBoard(newBoard);\n\n    if (engine.isCheckMate(newBoard, -aiColor)) {\n      setGameEnded(true);\n      setWinningPlayer(aiColor);\n\n      return;\n    }\n\n    const availablePlayerMoves = engine.generateMoves(newBoard, -aiColor);\n    setAvailableMoves(availablePlayerMoves);\n\n    if (availablePlayerMoves.length === 0) {\n      setGameEnded(true);\n\n      return;\n    }\n\n    setActivePlayer(nextPlayer(aiColor));\n  };\n\n  const canMove = (start, end) => {\n    return availableMoves.some(\n      move => move.start === start && move.end === end\n    );\n  };\n\n  const forceAiMove = () => {\n    setAiThinking(true);\n    engineWebWorker\n      .calculateMove(board, activePlayer, searchDepth)\n      .then(move => handleAIMove(board, move, activePlayer));\n  };\n\n  const startNewGame = () => {\n    setBoard(initialBoard);\n    setActivePlayer(WHITE);\n    setGameEnded(false);\n    setLastMove({ start: -1, end: -1 });\n    setWinningPlayer(undefined);\n    setAvailableMoves(engine.generateMoves(initialBoard, activePlayer));\n    setCurrentPieceMoves(new Set());\n  };\n\n  const handlePlayerMove = (piece, start, end) => {\n    let pieceId = Math.abs(piece);\n    if (gameEnded || isAiThinking) {\n      return;\n    }\n\n    if (!canMove(start, end)) {\n      return;\n    }\n\n    setLastMove({ start, end });\n\n    // TODO: Replace browser prompt dialog with own dialog\n    if (pieceId === P && ((activePlayer === WHITE && end < 29) || (activePlayer === BLACK && end > 90))) {\n      // Promotion\n      const choice = prompt('Choose promotion (Q, R, B, K)', 'Q');\n      switch (choice.toUpperCase()) {\n        case 'R':\n          pieceId = R;\n          break;\n        case 'B':\n          pieceId = B;\n          break;\n        case 'K':\n          pieceId = K;\n          break;\n        case 'Q':\n        default:\n          pieceId = Q;\n          break;\n      }\n    }\n\n    const newBoard = engine.performMove(board, new Move(pieceId, start, end));\n    setBoard(newBoard);\n\n    if (engine.isCheckMate(newBoard, -activePlayer)) {\n      setGameEnded(true);\n      setWinningPlayer(activePlayer);\n\n      return;\n    }\n\n    const moves = engine.generateMoves(newBoard, -activePlayer);\n\n    if (moves.length === 0) {\n      setGameEnded(true);\n      return;\n    }\n\n    setAiThinking(true);\n    clearAvailableMoves();\n    engineWebWorker\n      .calculateMove(newBoard, -activePlayer, searchDepth)\n      .then(move => handleAIMove(newBoard, move, -activePlayer));\n\n    setActivePlayer(-activePlayer);\n  };\n\n  const updatePossibleMoves = start => {\n    const possibleMoves = availableMoves\n      .filter(move => move.start === start)\n      .map(move => move.end);\n    setCurrentPieceMoves(new Set(possibleMoves));\n  };\n\n  const clearPossibleMoves = () => {\n    setCurrentPieceMoves(new Set());\n  };\n\n  return (\n    <GameArea>\n      <Board\n        board={board}\n        lastMove={lastMove}\n        currentPieceMoves={currentPieceMoves}\n        handlePlayerMove={handlePlayerMove}\n        updatePossibleMoves={updatePossibleMoves}\n        clearPossibleMoves={clearPossibleMoves}\n      />\n      <GameMenu\n        isAiThinking={isAiThinking}\n        gameEnded={gameEnded}\n        winningPlayerColor={winningPlayer}\n        startNewGame={startNewGame}\n        forceAiMove={forceAiMove}\n        searchDepth={searchDepth}\n        setSearchDepth={setSearchDepth}\n      />\n    </GameArea>\n  );\n};\n\nexport default Game;\n","/*\n * A free and open source chess game using AssemblyScript and React\n * Copyright (C) 2019 mhonert (https://github.com/mhonert)\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react';\nimport Game from './Game';\nimport { DndProvider } from 'react-dnd';\nimport HTML5Backend from 'react-dnd-html5-backend';\nimport TouchBackend from 'react-dnd-touch-backend';\n\nconst multiBackends = (...backendFactories) =>\n  function(manager) {\n    const backends = backendFactories.map(b => b(manager));\n    return {\n      setup: (...args) =>\n        backends.forEach(b => b.setup.apply(b, args)),\n      teardown: (...args) =>\n        backends.forEach(b => b.teardown.apply(b, args)),\n      connectDropTarget: (...args) =>\n        backends.forEach(b => b.connectDropTarget.apply(b, args)),\n      connectDragPreview: (...args) =>\n        backends.forEach(b => b.connectDragPreview.apply(b, args)),\n      connectDragSource: (...args) =>\n        backends.forEach(b => b.connectDragSource.apply(b, args)),\n    };\n  };\n\nfunction App() {\n  return (\n    <main>\n      <DndProvider backend={multiBackends(HTML5Backend, TouchBackend)}>\n        <Game />\n      </DndProvider>\n    </main>\n  );\n}\n\nexport default App;\n","/*\n * A free and open source chess game using AssemblyScript and React\n * Copyright (C) 2019 mhonert (https://github.com/mhonert)\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './ui/App';\nimport engine from './engine/engine-wasm-interop';\n\n(async () => {\n  await engine.init();\n  ReactDOM.render(<App />, document.getElementById('root'));\n})();\n"],"sourceRoot":""}