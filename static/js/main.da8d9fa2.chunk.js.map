{"version":3,"sources":["engine/engine.worker.js","ui/img/white_pawn.svg","ui/img/black_pawn.svg","ui/img/white_knight.svg","ui/img/black_knight.svg","ui/img/white_bishop.svg","ui/img/black_bishop.svg","ui/img/white_rook.svg","ui/img/black_rook.svg","ui/img/white_queen.svg","ui/img/black_queen.svg","ui/img/white_king.svg","ui/img/black_king.svg","ui/Field.js","ui/Piece.js","ui/Board.js","ui/AnimatedSpinner.js","ui/GameMenu.js","engine/constants.js","engine/engine-wasm-interop.js","ui/Game.js","ui/App.js","index.js"],"names":["addMethods","methods","module","exports","w","Worker","name","FieldDiv","styled","div","props","isEven","markColor","Field","boardIndex","children","movePiece","isStart","isEnd","isPossibleTarget","useDrop","accept","drop","item","monitor","pieceId","dropRef","fieldMarkStyle","ref","style","position","className","whiteImages","whitePawn","whiteKnight","whiteBishop","whiteRook","whiteQueen","whiteKing","blackImages","blackPawn","blackKnight","blackBishop","blackRook","blackQueen","blackKing","pieceNames","PieceContainer","PieceImage","img","isFirefox","InstallTrigger","Piece","color","piece","onPickup","onDrop","Math","abs","useDrag","type","begin","end","dropResult","collect","isDragging","drag","pieceImage","src","alt","BoardGrid","Board","board","isRotated","lastMove","currentPieceMoves","handlePlayerMove","updatePossibleMoves","clearPossibleMoves","slice","map","_","idx","rotatedIndex","key","start","has","AnimatedSpinner","MenuBar","MenuItem","hidden","GameButton","button","GameResult","IconRadioInput","input","IconRadioLabel","label","getGameResultIcon","winningPlayerColor","humanPlayerColor","faMedal","faRobot","faBalanceScale","IconRadioButtons","currentValue","options","onChange","value","description","icon","Fragment","id","defaultChecked","e","target","htmlFor","title","size","GameMenu","isAiThinking","firstMovePlayed","gameEnded","startNewGame","switchSides","rotateBoard","difficultyLevel","setDifficultyLevel","canUndoMove","undoMove","disabled","onClick","faPlus","faExchangeAlt","faUndo","faRetweet","faDiceOne","faDiceTwo","faDiceThree","faDiceFour","faDiceFive","Engine","this","engine","instantiate","fetch","console","log","newGame","playerColor","depth","boardArray","__allocArray","INT32ARRAY_ID","boardPtr","__retain","moveEncoded","calculateMove","move","Move","fromEncodedMove","__release","newBoardPtr","performMove","encodedMove","newBoard","__getArray","movesPtr","generatePlayerMoves","moves","result","isCheckMate","engineWebWorker","engineWorkerLoader","initialBoard","GameArea","Game","useState","setRotateBoard","activePlayer","setActivePlayer","setHumanPlayerColor","setAiThinking","setBoard","setGameEnded","setLastMove","generateMoves","availableMoves","setAvailableMoves","Set","setCurrentPieceMoves","winningPlayer","setWinningPlayer","previousMoveState","setPreviousMoveState","handleAIMove","aiColor","availablePlayerMoves","length","some","canMove","previousBoard","previousLastMove","previousActivePlayer","previousAvailableMoves","prompt","toUpperCase","then","possibleMoves","filter","undefined","multiBackends","backendFactories","manager","backends","b","setup","args","forEach","apply","teardown","connectDropTarget","connectDragPreview","connectDragSource","App","DndProvider","backend","HTML5Backend","TouchBackend","a","async","init","ReactDOM","render","document","getElementById"],"mappings":"kFACI,IAAIA,EAAa,EAAQ,IACrBC,EAAU,CAAC,gBAAgB,WAC/BC,EAAOC,QAAU,WAChB,IAAIC,EAAI,IAAIC,OAAO,IAA0B,iCAAkC,CAAEC,KAAM,qBAGvF,OAFAN,EAAWI,EAAGH,GAEPG,I,mBCPZF,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,0C,mBCA3CD,EAAOC,QAAU,IAA0B,0C,mBCA3CD,EAAOC,QAAU,IAA0B,0C,mBCA3CD,EAAOC,QAAU,IAA0B,0C,mBCA3CD,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,yC,mBCA3CD,EAAOC,QAAU,IAA0B,yC,mBCA3CD,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,wC,oMCsBrCI,EAAWC,IAAOC,IAAV,kEAAGD,CAAH,uLAEQ,SAAAE,GAAK,OAAIA,EAAMC,OAAS,UAAY,aAUhC,SAAAD,GAAK,OAAIA,EAAME,aA4C1BC,EAvCD,SAAC,GAQR,IAPLC,EAOI,EAPJA,WACAC,EAMI,EANJA,SACAC,EAKI,EALJA,UACAL,EAII,EAJJA,OACAM,EAGI,EAHJA,QACAC,EAEI,EAFJA,MACAC,EACI,EADJA,iBACI,EACgBC,YAAQ,CAC1BC,OAAQ,QACRC,KAAM,SAACC,EAAMC,GACXR,EAAUO,EAAKE,QAASF,EAAKT,WAAYA,MAHpCY,EADL,oBAQEC,EACJV,GAAWC,GAASC,EAAmB,YAAc,GAGjDP,EAAYO,EAAmB,uBACnBF,EAAU,YACVC,EAAQ,YACR,QAElB,OACE,kBAACX,EAAD,CACEqB,IAAKF,EACLf,OAAQA,EACRkB,MAAO,CAAEC,SAAU,YACnBb,QAASA,EACTL,UAAWA,EACXmB,UAAWJ,GAEVZ,I,oNCtCDiB,EAAc,CAClBC,IACAC,IACAC,IACAC,IACAC,IACAC,KAGIC,EAAc,CAClBC,IACAC,IACAC,IACAC,IACAC,IACAC,KAGIC,EAAa,CAAE,OAAQ,SAAU,SAAU,OAAQ,QAAS,QAE5DC,EAAiBvC,IAAOC,IAAV,wEAAGD,CAAH,MAGdwC,EAAaxC,IAAOyC,IAAV,oEAAGzC,CAAH,kHAcV0C,EAAsC,qBAAnBC,eAkCVC,EAhCD,SAAC,GAAoD,IAAlDtC,EAAiD,EAAjDA,WAAYuC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,OAC7C/B,EAAUgC,KAAKC,IAAIJ,GACnBL,EACM,UAAVI,EAAoBd,EAAYd,EAAU,GAAKO,EAAYP,EAAU,GAHP,EAKjCkC,YAAQ,CACrCpC,KAAM,CACJqC,KAAM,QACNnC,UACAX,cAEF+C,MAAO,SAAArC,GAAO,OAAI+B,EAASzC,IAC3BgD,IAAK,SAAAC,GAAU,OAAIP,EAAO1C,IAC1BkD,QAAS,SAAAxC,GAAO,MAAK,CACnByC,aAAczC,EAAQyC,iBAdsC,mBAKvDA,EALuD,KAKvDA,WAAcC,EALyC,KAkB1DC,EACJ,kBAACnB,EAAD,CACEpB,IAAKsC,EACLE,IAAKnB,EACLoB,IAAKvB,EAAWrB,EAAU,GAC1BM,UAAWkC,EAAa,WAAa,KAIzC,OAAOf,EACF,kBAACH,EAAD,CAAgBnB,IAAKsC,GAAOC,GAC7BA,GChFAG,EAAY9D,IAAOC,IAAV,uEAAGD,CAAH,6OAmDA+D,EAjCD,SAAC,GAAgH,IAA/GC,EAA8G,EAA9GA,MAAOC,EAAuG,EAAvGA,UAAWC,EAA4F,EAA5FA,SAAUC,EAAkF,EAAlFA,kBAAmBC,EAA+D,EAA/DA,iBAAkBC,EAA6C,EAA7CA,oBAAqBC,EAAwB,EAAxBA,mBACpG,OACE,kBAACR,EAAD,CAAWG,UAAWA,GACnBD,EAAMO,MAAM,EAAG,IAAIC,KAAI,SAACC,EAAGC,GAC1B,IAAMC,EAAeV,EAAY,GAAKS,EAAMA,EACtC3D,EAAOiD,EAAMW,GAEnB,OACE,kBAAC,EAAD,CACEC,IAAKD,EACLrE,WAAYqE,EACZnE,UAAW4D,EACXjE,QAASwE,GAAgBA,GAAgB,IAAM,IAAM,EACrDlE,QAASkE,IAAiBT,EAASW,MACnCnE,MAAOiE,IAAiBT,EAASZ,IACjC3C,iBAAkBwD,EAAkBW,IAAIH,IAE9B,IAAT5D,GACC,kBAAC,EAAD,CACET,WAAYqE,EACZ9B,MAAO9B,EAAO,EAAI,QAAU,QAC5B+B,MAAO/B,EACPgC,SAAUsB,EACVrB,OAAQsB,UC1ClBS,EAAkB/E,IAAOC,IAAV,sEAAGD,CAAH,mpCAoFN,oBACb,kBAAC+E,EAAD,KACE,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,gC,cCjFEC,GAAUhF,IAAOC,IAAV,wEAAGD,CAAH,4LAePiF,GAAWjF,IAAOC,IAAV,yEAAGD,CAAH,uJAED,SAAAE,GAAK,OAAKA,EAAMgF,OAAS,OAAS,UAUzCC,GAAanF,IAAOoF,OAAV,2EAAGpF,CAAH,oRAuBVqF,GAAarF,YAAOiF,IAAV,2EAAGjF,CAAH,8IAcVsF,GAAiBtF,IAAOuF,MAAV,+EAAGvF,CAAH,gDAQdwF,GAAiBxF,IAAOyF,MAAV,+EAAGzF,CAAH,kFAad0F,GAAoB,SAACC,EAAoBC,GAC7C,OAAKD,EAIEA,IAAuBC,EAC1BC,IACAC,IALKC,KAkELC,GAAmB,SAAC,GAAD,IAAEC,EAAF,EAAEA,aAAcnG,EAAhB,EAAgBA,KAAMoG,EAAtB,EAAsBA,QAASC,EAA/B,EAA+BA,SAA/B,OACvB,oCACGD,EAAQ1B,KAAI,gBAAE4B,EAAF,EAAEA,MAAOC,EAAT,EAASA,YAAaC,EAAtB,EAAsBA,KAAtB,OACX,kBAAC,IAAMC,SAAP,CAAgB3B,IAAG,UAAK9E,EAAL,YAAasG,IAC9B,kBAACd,GAAD,CAAgBlC,KAAK,QAAQoD,GAAE,UAAK1G,EAAL,YAAasG,GAAStG,KAAMA,EAAMsG,MAAOA,EAAOK,eAAgBR,IAAiBG,EAAOD,SAAU,SAACO,GAAD,OAAOP,EAASO,EAAEC,OAAOP,UAC1J,kBAACZ,GAAD,CAAgBoB,QAAO,UAAK9G,EAAL,YAAasG,IAClC,kBAAC,IAAD,CAAiBE,KAAMA,EAAMO,MAAOR,EAAaS,KAAK,cAOjDC,GAvEE,SAAC,GAAD,IACfC,EADe,EACfA,aACAC,EAFe,EAEfA,gBACArB,EAHe,EAGfA,iBACAsB,EAJe,EAIfA,UACAvB,EALe,EAKfA,mBACAwB,EANe,EAMfA,aACAC,EAPe,EAOfA,YACAC,EARe,EAQfA,YACAC,EATe,EASfA,gBACAC,EAVe,EAUfA,mBACAC,EAXe,EAWfA,YACAC,EAZe,EAYfA,SAZe,OAcf,kBAACzC,GAAD,KACGkC,GACD,kBAAC7B,GAAD,KACE,kBAAC,IAAD,CAAiBiB,KAAMZ,GAAkBC,EAAoBC,GAAmBkB,KAAK,OACpFnB,GCpIc,IDoIiBA,EA9BQ,QAAU,SA8BI,SAAW,SAInE,kBAACV,GAAD,CAAUC,OAAQ8B,GAEhB,kBAAC7B,GAAD,CAAYuC,UAAWT,EAAiBU,QAASR,GAC/C,kBAAC,IAAD,CAAiBb,KAAMsB,IAAQf,MAAM,oBAGvC,kBAAC1B,GAAD,CAAYuC,SAAUR,GAAaD,EAAiBU,QAASP,GAC3D,kBAAC,IAAD,CAAiBd,KAAMuB,IAAehB,MAAM,kBAG9C,kBAAC1B,GAAD,CAAYuC,UAAWF,GAAeN,EAAWS,QAASF,GACxD,kBAAC,IAAD,CAAiBnB,KAAMwB,IAAQjB,MAAM,eAGvC,kBAAC1B,GAAD,CAAYuC,SAAUR,IAAcD,EAAiBU,QAASN,GAC5D,kBAAC,IAAD,CAAiBf,KAAMyB,IAAWlB,MAAM,mBAK5C,kBAAC5B,GAAD,CAAUC,OAAQ8B,GAAgBE,GAChC,kBAAC,GAAD,CAAkBjB,aAAcqB,EAAiBxH,KAAK,mBAAmBqG,SAAUoB,EACjErB,QAAS,CACP,CAACE,MAAO,EAAGC,YAAa,4BAA6BC,KAAM0B,KAC3D,CAAC5B,MAAO,EAAGC,YAAa,qBAAsBC,KAAM2B,KACpD,CAAC7B,MAAO,EAAGC,YAAa,qBAAsBC,KAAM4B,KACpD,CAAC9B,MAAO,EAAGC,YAAa,qBAAsBC,KAAM6B,KACpD,CAAC/B,MAAO,EAAGC,YAAa,4BAA6BC,KAAM8B,SAIhFpB,GAAgB,kBAAC,EAAD,Q,2BEpKfqB,G,uKAEEC,KAAKC,O,2EAGWC,uBAAYC,MAAM,mB,OAAtCH,KAAKC,O,OACLG,QAAQC,IAAI,sB,iFAIZL,KAAKC,OAAOK,Y,oCAGA5E,EAAO6E,EAAaC,GAChCJ,QAAQC,IAAI,iCAEZ,IAAMI,EAAcT,KAAKC,OAAOS,aAAaV,KAAKC,OAAOU,cAAejF,GAClEkF,EAAWZ,KAAKC,OAAOY,SAASJ,GAEhCK,EAAcd,KAAKC,OAAOc,cAAcH,EAAUL,EAAaC,GAE/DQ,EAAOC,GAAKC,gBAAgBJ,GAMlC,OAJAd,KAAKC,OAAOkB,UAAUP,GAEtBR,QAAQC,IAAI,wBAELW,I,kCAGGtF,EAAOsF,GACjB,IAAMP,EAAcT,KAAKC,OAAOS,aAAaV,KAAKC,OAAOU,cAAejF,GAClEkF,EAAWZ,KAAKC,OAAOY,SAASJ,GAEhCW,EAAcpB,KAAKC,OAAOoB,YAAYT,EAAUI,EAAKM,aAErDC,EAAWvB,KAAKC,OAAOuB,WAAWJ,GAKxC,OAHApB,KAAKC,OAAOkB,UAAUP,GACtBZ,KAAKC,OAAOkB,UAAUC,GAEfG,I,oCAGK7F,EAAO6E,GACnB,IAAME,EAAcT,KAAKC,OAAOS,aAAaV,KAAKC,OAAOU,cAAejF,GAClEkF,EAAWZ,KAAKC,OAAOY,SAASJ,GAEhCgB,EAAWzB,KAAKC,OAAOyB,oBAAoBd,EAAUL,GAErDoB,EAAQ3B,KAAKC,OAAOuB,WAAWC,GAKrC,OAHAzB,KAAKC,OAAOkB,UAAUM,GACtBzB,KAAKC,OAAOkB,UAAUP,GAEfe,EAAMzF,IAAI+E,GAAKC,mB,kCAGZxF,EAAO6E,GACjB,IAAME,EAAcT,KAAKC,OAAOS,aAAaV,KAAKC,OAAOU,cAAejF,GAClEkF,EAAWZ,KAAKC,OAAOY,SAASJ,GAEhCmB,EAAS5B,KAAKC,OAAO4B,YAAYjB,EAAUL,GAIjD,OAFAP,KAAKC,OAAOkB,UAAUP,GAEfgB,M,KAIEX,GAAb,WACE,WAAYzG,EAAO+B,EAAOvB,GAAM,qBAC9BgF,KAAKxF,MAAQA,EACbwF,KAAKzD,MAAQA,EACbyD,KAAKhF,IAAMA,EACXgF,KAAKsB,YAAc9G,EAAS+B,GAAS,EAAMvB,GAAO,GALtD,kEAQyBsG,GAKrB,OAAO,IAAIL,EAJiB,EAAdK,EACCA,GAAe,EAAK,IACtBA,GAAe,GAAM,SAXtC,KAiBe,OAAIvB,GClFb+B,GAAkBC,MAIlBC,GAAe,EFPJ,GAFA,GACA,GAEA,GACA,GAHA,GADA,GAEA,GAHA,uBEaf,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAC5B,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAC5B,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAC5B,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EFhBb,gBAGA,EAFA,EACA,EAEA,EACA,EAHA,EADA,EAEA,EEgBf,EAAG,EAXgB,GAcfC,GAAWvK,IAAOC,IAAV,gEAAGD,CAAH,kCAwMCwK,GAnMF,WAAO,IAAD,EACqBC,oBAAS,GAD9B,mBACVpD,EADU,KACGqD,EADH,OAEuBD,mBF/BrB,GE6BF,mBAEVE,EAFU,KAEIC,EAFJ,OAG+BH,mBFhC7B,GE6BF,mBAGV7E,EAHU,KAGQiF,EAHR,OAIqBJ,oBAAS,GAJ9B,mBAIVzD,EAJU,KAII8D,EAJJ,OAKSL,mBAASH,IALlB,mBAKVtG,EALU,KAKH+G,EALG,OAMiBN,oBAAS,GAN1B,mBAMVvD,EANU,KAMC8D,EAND,OAOeP,mBAAS,CAAE5F,OAAQ,EAAGvB,KAAM,IAP3C,mBAOVY,EAPU,KAOA+G,EAPA,OAQ2BR,mBAASlC,GAAO2C,cAAclH,EAAO2G,IARhE,mBAQVQ,EARU,KAQMC,EARN,OASiCX,mBAAS,IAAIY,KAT9C,mBASVlH,EATU,KASSmH,EATT,OAUyBb,qBAVzB,mBAUVc,EAVU,KAUKC,EAVL,OAW6Bf,mBAAS,GAXtC,mBAWVnD,EAXU,KAWOC,EAXP,OAYiCkD,qBAZjC,mBAYVgB,EAZU,KAYSC,EAZT,KAkBXC,EAAe,SAAC3H,EAAOsF,EAAMsC,GACjCd,GAAc,GAEdG,EAAY3B,GAEZ,IAAMO,EAAWtB,GAAOoB,YAAY3F,EAAOsF,GAG3C,GAFAyB,EAASlB,GAELtB,GAAO4B,YAAYN,GAAW+B,GAIhC,OAHAZ,GAAa,QACbQ,EAAiBI,GAKnB,IAAMC,EAAuBtD,GAAO2C,cAAcrB,GAAW+B,IAC7DR,EAAkBS,GAEkB,IAAhCA,EAAqBC,QAMzBlB,GAA2BgB,GALzBZ,GAAa,IAiIjB,OACE,kBAACT,GAAD,KACE,kBAAC,EAAD,CACEvG,MAAOA,EACPC,UAAWoD,EACXnD,SAAUA,EACVC,kBAAmBA,EACnBC,iBA9EmB,SAACtB,EAAO+B,EAAOvB,GACtC,IAAIrC,EAAUgC,KAAKC,IAAIJ,GACvB,IAAIoE,IAAaF,GApDH,SAACnC,EAAOvB,GACtB,OAAO6H,EAAeY,MACpB,SAAAzC,GAAI,OAAIA,EAAKzE,QAAUA,GAASyE,EAAKhG,MAAQA,KAsD1C0I,CAAQnH,EAAOvB,GAApB,CAQA,GAtBAoI,EAAqB,CACnBO,cAAejI,EACfkI,iBAAkBhI,EAClBiI,qBAAsBxB,EACtByB,uBAAwBjB,IAe1BF,EAAY,CAAEpG,QAAOvB,QFrIR,IEwITrC,IF1Ia,IE0IM0J,GAA0BrH,EAAM,IF3ItC,IE2I6CqH,GAA0BrH,GAAO,IAG7F,OADe+I,OAAO,gCAAiC,KACxCC,eACb,IAAK,IACHrL,EF1IO,EE2IP,MACF,IAAK,IACHA,EF9IO,EE+IP,MACF,IAAK,IACHA,EF9IO,EE+IP,MACF,IAAK,IACL,QACEA,EFnJO,EEwJb,IAAM4I,EAAWtB,GAAOoB,YAAY3F,EAAO,IAAIuF,GAAKtI,EAAS4D,EAAOvB,IAGpE,GAFAyH,EAASlB,GAELtB,GAAO4B,YAAYN,GAAWc,GAIhC,OAHAK,GAAa,QACbQ,EAAiBb,GAOE,IAFPpC,GAAO2C,cAAcrB,GAAWc,GAEpCmB,QAKVhB,GAAc,GApIkBM,EAAkB,IAsIlDhB,GACGf,cAAcQ,GAAWc,EAAcrD,GACvCiF,MAAK,SAAAjD,GAAI,OAAIqC,EAAa9B,EAAUP,GAAOqB,MAE9CC,GAAiBD,IAVfK,GAAa,KAgCX3G,oBAnBsB,SAAAQ,GAC1B,IAAM2H,EAAgBrB,EACnBsB,QAAO,SAAAnD,GAAI,OAAIA,EAAKzE,QAAUA,KAC9BL,KAAI,SAAA8E,GAAI,OAAIA,EAAKhG,OACpBgI,EAAqB,IAAID,IAAImB,KAgBzBlI,mBAbqB,WACzBgH,EAAqB,IAAID,QAcvB,kBAAC,GAAD,CACErE,aAAcA,EACdC,iBAAqC,IAApB/C,EAASW,MAC1Be,iBAAkBA,EAClBsB,UAAWA,EACXvB,mBAAoB4F,EACpBpE,aA3He,WACnBiD,GAAgBxB,UACb2D,MAAK,WACJ7B,GAAe,GACfgB,OAAqBgB,GACrB3B,EAAST,IACTM,EF/Fa,GEgGbC,EFhGa,GEiGbG,GAAa,GACbC,EAAY,CAAEpG,OAAQ,EAAGvB,KAAM,IAC/BkI,OAAiBkB,GACjBtB,EAAkB7C,GAAO2C,cAAcZ,GFpG1B,IEqGbgB,EAAqB,IAAID,SAgHzBjE,YArIc,WAClBsD,GAAe,GACfI,GAAc,GACdD,GAAqBjF,GACrBwE,GACGf,cAAcrF,EAAO2G,EAAcrD,GACnCiF,MAAK,SAAAjD,GAAI,OAAIqC,EAAa3H,EAAOsF,EAAMqB,OAgItCtD,YAAa,kBAAMqD,GAAgBrD,IACnCC,gBAAiBA,EACjBC,mBAAoBA,EACpBC,cAAeiE,EACfhE,SAjHW,WAAO,IACfwE,EAAiFR,EAAjFQ,cAAeC,EAAkET,EAAlES,iBAAkBC,EAAgDV,EAAhDU,qBAAsBC,EAA0BX,EAA1BW,uBAC9DrB,EAASkB,GACThB,EAAYiB,GACZtB,EAAgBuB,GAChBf,EAAkBgB,GAElBV,OAAqBgB,Q,2BC3GnBC,GAAgB,sCAAIC,EAAJ,yBAAIA,EAAJ,uBACpB,SAASC,GACP,IAAMC,EAAWF,EAAiBpI,KAAI,SAAAuI,GAAC,OAAIA,EAAEF,MAC7C,MAAO,CACLG,MAAO,sCAAIC,EAAJ,yBAAIA,EAAJ,uBACLH,EAASI,SAAQ,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,MAAMJ,EAAGE,OACzCG,SAAU,sCAAIH,EAAJ,yBAAIA,EAAJ,uBACRH,EAASI,SAAQ,SAAAH,GAAC,OAAIA,EAAEK,SAASD,MAAMJ,EAAGE,OAC5CI,kBAAmB,sCAAIJ,EAAJ,yBAAIA,EAAJ,uBACjBH,EAASI,SAAQ,SAAAH,GAAC,OAAIA,EAAEM,kBAAkBF,MAAMJ,EAAGE,OACrDK,mBAAoB,sCAAIL,EAAJ,yBAAIA,EAAJ,uBAClBH,EAASI,SAAQ,SAAAH,GAAC,OAAIA,EAAEO,mBAAmBH,MAAMJ,EAAGE,OACtDM,kBAAmB,sCAAIN,EAAJ,yBAAIA,EAAJ,uBACjBH,EAASI,SAAQ,SAAAH,GAAC,OAAIA,EAAEQ,kBAAkBJ,MAAMJ,EAAGE,UAc5CO,OAVf,WACE,OACE,8BACE,kBAACC,GAAA,EAAD,CAAaC,QAASf,GAAcgB,KAAcC,OAChD,kBAAC,GAAD,SCrBP,EAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACOtF,GAAOwF,QADd,OAECC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SAFlD,uC","file":"static/js/main.da8d9fa2.chunk.js","sourcesContent":["\n\t\t\t\tvar addMethods = require(\"../../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = [\"calculateMove\",\"newGame\"]\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"2092e2b7e6472f10d653.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t","module.exports = __webpack_public_path__ + \"static/media/white_pawn.41da1b5b.svg\";","module.exports = __webpack_public_path__ + \"static/media/black_pawn.3cab4671.svg\";","module.exports = __webpack_public_path__ + \"static/media/white_knight.3ece5029.svg\";","module.exports = __webpack_public_path__ + \"static/media/black_knight.88ad52be.svg\";","module.exports = __webpack_public_path__ + \"static/media/white_bishop.36a96cf8.svg\";","module.exports = __webpack_public_path__ + \"static/media/black_bishop.341337f4.svg\";","module.exports = __webpack_public_path__ + \"static/media/white_rook.007b43f5.svg\";","module.exports = __webpack_public_path__ + \"static/media/black_rook.e7f61dec.svg\";","module.exports = __webpack_public_path__ + \"static/media/white_queen.51d538db.svg\";","module.exports = __webpack_public_path__ + \"static/media/black_queen.87612c77.svg\";","module.exports = __webpack_public_path__ + \"static/media/white_king.9e716b1e.svg\";","module.exports = __webpack_public_path__ + \"static/media/black_king.12ae1430.svg\";","/*\n * A free and open source chess game using AssemblyScript and React\n * Copyright (C) 2020 mhonert (https://github.com/mhonert)\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react';\nimport { useDrop } from 'react-dnd';\nimport styled from 'styled-components/macro';\n\nconst FieldDiv = styled.div`\n  position: relative;\n  background-color: ${props => props.isEven ? \"#fdf6e3\" : \"#eee8d5\"};\n  \n  &.move-mark:before {\n    position: absolute;\n    top: 4%;\n    left: 4%;\n    bottom: 4%;\n    right: 4%;\n    content: '';\n    display: block;\n    border: 0.5vh solid ${props => props.markColor};\n    border-radius: 50%;\n  }\n`;\n\nconst Field = ({\n  boardIndex,\n  children,\n  movePiece,\n  isEven,\n  isStart,\n  isEnd,\n  isPossibleTarget\n}) => {\n  const [, dropRef] = useDrop({\n    accept: 'PIECE',\n    drop: (item, monitor) => {\n      movePiece(item.pieceId, item.boardIndex, boardIndex);\n    }\n  });\n\n  const fieldMarkStyle =\n    isStart || isEnd || isPossibleTarget ? 'move-mark' : '';\n\n  // prettier-ignore\n  const markColor = isPossibleTarget ? 'rgba(169,189,0,0.69)'\n                  : isStart ? '#dc322f9f'\n                  : isEnd ? '#dc322faf'\n                  : 'white';\n\n  return (\n    <FieldDiv\n      ref={dropRef}\n      isEven={isEven}\n      style={{ position: 'relative' }}\n      isStart={isStart}\n      markColor={markColor}\n      className={fieldMarkStyle}\n    >\n      {children}\n    </FieldDiv>\n  );\n};\n\nexport default Field;\n","/*\n * A free and open source chess game using AssemblyScript and React\n * Copyright (C) 2020 mhonert (https://github.com/mhonert)\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react';\nimport { useDrag } from 'react-dnd';\nimport styled from 'styled-components/macro';\n\nimport whitePawn from './img/white_pawn.svg';\nimport blackPawn from './img/black_pawn.svg';\nimport whiteKnight from './img/white_knight.svg';\nimport blackKnight from './img/black_knight.svg';\nimport whiteBishop from './img/white_bishop.svg';\nimport blackBishop from './img/black_bishop.svg';\nimport whiteRook from './img/white_rook.svg';\nimport blackRook from './img/black_rook.svg';\nimport whiteQueen from './img/white_queen.svg';\nimport blackQueen from './img/black_queen.svg';\nimport whiteKing from './img/white_king.svg';\nimport blackKing from './img/black_king.svg';\n\nconst whiteImages = [\n  whitePawn,\n  whiteKnight,\n  whiteBishop,\n  whiteRook,\n  whiteQueen,\n  whiteKing\n];\n\nconst blackImages = [\n  blackPawn,\n  blackKnight,\n  blackBishop,\n  blackRook,\n  blackQueen,\n  blackKing\n];\n\nconst pieceNames = [ 'Pawn', 'Knight', 'Bishop', 'Rook', 'Queen', 'King' ]\n\nconst PieceContainer = styled.div`\n`;\n\nconst PieceImage = styled.img`\n  display: block;\n  margin: 13%;\n  height: 74%;\n  width: 74%;\n\n  &.dragging {\n    visibility: hidden;\n  }\n  \n  // Workaround for wrong Drag'n'Drop preview image rendering in Chrome (see https://github.com/react-dnd/react-dnd/issues/832)\n  -webkit-transform: rotateZ(0deg);\n`;\n\nconst isFirefox = typeof InstallTrigger !== 'undefined';\n\nconst Piece = ({ boardIndex, color, piece, onPickup, onDrop }) => {\n  const pieceId = Math.abs(piece);\n  const img =\n    color === 'black' ? blackImages[pieceId - 1] : whiteImages[pieceId - 1];\n\n  const [{ isDragging }, drag] = useDrag({\n    item: {\n      type: 'PIECE',\n      pieceId,\n      boardIndex\n    },\n    begin: monitor => onPickup(boardIndex),\n    end: dropResult => onDrop(boardIndex),\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging()\n    })\n  });\n\n  const pieceImage =\n    <PieceImage\n      ref={drag}\n      src={img}\n      alt={pieceNames[pieceId - 1]}\n      className={isDragging ? 'dragging' : ''}\n    />;\n\n  // Workaround for wrong Drag'n'Drop preview image rendering in Firefox\n  return isFirefox\n    ?  <PieceContainer ref={drag}>{pieceImage}</PieceContainer>\n    : pieceImage;\n};\n\nexport default Piece;\n","/*\n * A free and open source chess game using AssemblyScript and React\n * Copyright (C) 2020 mhonert (https://github.com/mhonert)\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react';\nimport Field from './Field';\nimport Piece from './Piece';\nimport styled from 'styled-components/macro';\n\nconst BoardGrid = styled.div`\n    display: grid;\n    grid-template-columns: repeat(8, 1fr);\n    grid-template-rows: repeat(8, 1fr);\n\n    box-shadow: 3px 3px 3px #586e75;\n    \n    // always keep board size rectangular and maximized to the smaller axis\n    @media (min-aspect-ratio: 99/100) {\n          width: 100vh;\n          height: 100vh;\n    }\n    @media (max-aspect-ratio: 100/99) {\n          width: 100vw;\n          height: 100vw;\n    }\n`;\n\nconst Board = ({board, isRotated, lastMove, currentPieceMoves, handlePlayerMove, updatePossibleMoves, clearPossibleMoves}) => {\n  return (\n    <BoardGrid isRotated={isRotated}>\n      {board.slice(0, 64).map((_, idx) => {\n        const rotatedIndex = isRotated ? 63 - idx : idx;\n        const item = board[rotatedIndex];\n\n        return (\n          <Field\n            key={rotatedIndex}\n            boardIndex={rotatedIndex}\n            movePiece={handlePlayerMove}\n            isEven={(rotatedIndex + (rotatedIndex >> 3)) % 2 === 0}\n            isStart={rotatedIndex === lastMove.start}\n            isEnd={rotatedIndex === lastMove.end}\n            isPossibleTarget={currentPieceMoves.has(rotatedIndex)}\n          >\n            {item !== 0 && (\n              <Piece\n                boardIndex={rotatedIndex}\n                color={item < 0 ? 'black' : 'white'}\n                piece={item}\n                onPickup={updatePossibleMoves}\n                onDrop={clearPossibleMoves}\n              />\n            )}\n          </Field>\n        );\n      })}\n    </BoardGrid>\n  );\n};\n\nexport default Board;","/*\n * A free and open source chess game using AssemblyScript and React\n * Copyright (C) 2020 mhonert (https://github.com/mhonert)\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport styled from 'styled-components/macro';\nimport React from 'react';\n\n/* Animated spinner adapted from https://loading.io/css/ */\nconst AnimatedSpinner = styled.div`\n  color: #073642;\n  display: inline-block;\n  position: relative;\n  width: 80px;\n  height: 80px;\n  \n  margin-top: 1rem;\n  margin-right: 0.5rem;\n  margin-left: 1.5rem;\n  \n  div {\n    transform-origin: 40px 40px;\n    animation: lds-spinner 1.2s linear infinite;\n  }\n  div:after {\n    content: \" \";\n    display: block;\n    position: absolute;\n    top: 3px;\n    left: 37px;\n    width: 6px;\n    height: 18px;\n    border-radius: 20%;\n    background: #073642;\n  }\n  div:nth-child(1) {\n    transform: rotate(0deg);\n    animation-delay: -1.1s;\n  }\n  div:nth-child(2) {\n    transform: rotate(30deg);\n    animation-delay: -1s;\n  }\n  div:nth-child(3) {\n    transform: rotate(60deg);\n    animation-delay: -0.9s;\n  }\n  div:nth-child(4) {\n    transform: rotate(90deg);\n    animation-delay: -0.8s;\n  }\n  div:nth-child(5) {\n    transform: rotate(120deg);\n    animation-delay: -0.7s;\n  }\n  div:nth-child(6) {\n    transform: rotate(150deg);\n    animation-delay: -0.6s;\n  }\n  div:nth-child(7) {\n    transform: rotate(180deg);\n    animation-delay: -0.5s;\n  }\n  div:nth-child(8) {\n    transform: rotate(210deg);\n    animation-delay: -0.4s;\n  }\n  div:nth-child(9) {\n    transform: rotate(240deg);\n    animation-delay: -0.3s;\n  }\n  div:nth-child(10) {\n    transform: rotate(270deg);\n    animation-delay: -0.2s;\n  }\n  div:nth-child(11) {\n    transform: rotate(300deg);\n    animation-delay: -0.1s;\n  }\n  div:nth-child(12) {\n    transform: rotate(330deg);\n    animation-delay: 0s;\n  }\n  @keyframes lds-spinner {\n    0% {\n      opacity: 1;\n    }\n    100% {\n      opacity: 0;\n    }\n  }\n`\n\nexport default () => (\n  <AnimatedSpinner>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n  </AnimatedSpinner>\n);\n","/*\n * A free and open source chess game using AssemblyScript and React\n * Copyright (C) 2020 mhonert (https://github.com/mhonert)\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react';\nimport styled from 'styled-components/macro';\nimport { WHITE } from '../engine/constants';\nimport AnimatedSpinner from './AnimatedSpinner';\nimport {\n  faBalanceScale,\n  faDiceFive,\n  faDiceFour,\n  faDiceOne,\n  faDiceThree,\n  faDiceTwo,\n  faExchangeAlt,\n  faMedal,\n  faPlus,\n  faRetweet,\n  faRobot,\n  faUndo\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst MenuBar = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 1rem;\n  margin-left: 1.5rem;\n  text-align: center;\n\n  // center menubar below board, if window width is < window height\n  @media (max-aspect-ratio: 100/99) {\n    margin-left: auto;\n    margin-right: auto;\n    flex-flow: column-reverse;\n  }\n`;\n\nconst MenuItem = styled.div`\n  position: relative;\n  display: ${props => (props.hidden ? 'none' : 'flex')};\n  padding-bottom: 0.5rem;\n  flex-direction: column;\n  \n  @media (max-aspect-ratio: 100/99) {\n    flex-direction: row;\n    align-self: center;\n  }\n`;\n\nconst GameButton = styled.button`\n  background: white;\n  color: #073642;\n  border: 1px solid #073642;\n  border-radius: 0.3rem;\n  font-size: 1rem;\n  font-weight: bold;\n  padding: 0.5rem 0.4rem;\n  width: 2.5rem;\n  margin: 0.3rem;\n  box-shadow: 1px 1px 1px #073642;\n  \n  &[disabled] {\n    display: none;\n  }\n\n  & :hover {\n    background: #073642;\n    color: white;\n    cursor: pointer;\n  }\n`;\n\nconst GameResult = styled(MenuItem)`\n  margin-top: 0.3rem;\n  font-weight: bold;\n  font-size: 1.5rem;\n  color: #073642;\n  width: 100%;\n  align-items: center;\n  \n  svg {\n    margin-left: 1rem;\n    margin-right: 1rem;\n  }\n`;\n\nconst IconRadioInput = styled.input`\n  display: none;\n  \n  &:checked + label {\n    opacity: 1;\n  }\n`;\n\nconst IconRadioLabel = styled.label`\n  color: #073642;\n  margin: 0.2rem;\n  opacity: 0.2;\n  \n  & :hover {\n    opacity: 0.5;\n    cursor: pointer;\n  }\n`\n\nconst colorName = color => (color === WHITE ? 'White' : 'Black');\n\nconst getGameResultIcon = (winningPlayerColor, humanPlayerColor) => {\n  if (!winningPlayerColor) {\n    return faBalanceScale;\n  }\n\n  return winningPlayerColor === humanPlayerColor\n    ? faMedal\n    : faRobot;\n}\n\nconst GameMenu = ({\n  isAiThinking,\n  firstMovePlayed,\n  humanPlayerColor,\n  gameEnded,\n  winningPlayerColor,\n  startNewGame,\n  switchSides,\n  rotateBoard,\n  difficultyLevel,\n  setDifficultyLevel,\n  canUndoMove,\n  undoMove,\n}) => (\n  <MenuBar>\n    {gameEnded &&\n    <GameResult>\n      <FontAwesomeIcon icon={getGameResultIcon(winningPlayerColor, humanPlayerColor)} size=\"2x\" />\n      {winningPlayerColor ? colorName(winningPlayerColor) + ' wins!' : 'Draw!'}\n    </GameResult>\n    }\n\n    <MenuItem hidden={isAiThinking}>\n\n      <GameButton disabled={!firstMovePlayed} onClick={startNewGame}>\n        <FontAwesomeIcon icon={faPlus} title=\"Start new game\" />\n      </GameButton>\n\n      <GameButton disabled={gameEnded || firstMovePlayed} onClick={switchSides}>\n        <FontAwesomeIcon icon={faExchangeAlt} title=\"Switch sides\" />\n      </GameButton>\n\n      <GameButton disabled={!canUndoMove || gameEnded} onClick={undoMove}>\n        <FontAwesomeIcon icon={faUndo} title=\"Undo move\" />\n      </GameButton>\n\n      <GameButton disabled={gameEnded || !firstMovePlayed} onClick={rotateBoard}>\n        <FontAwesomeIcon icon={faRetweet} title=\"Rotate board\" />\n      </GameButton>\n\n    </MenuItem>\n\n    <MenuItem hidden={isAiThinking || gameEnded}>\n      <IconRadioButtons currentValue={difficultyLevel} name=\"difficulty-level\" onChange={setDifficultyLevel}\n                        options={[\n                          {value: 1, description: \"Difficulty level 1 (easy)\", icon: faDiceOne},\n                          {value: 2, description: \"Difficulty level 2\", icon: faDiceTwo},\n                          {value: 3, description: \"Difficulty level 3\", icon: faDiceThree},\n                          {value: 4, description: \"Difficulty level 4\", icon: faDiceFour},\n                          {value: 5, description: \"Difficulty level 5 (hard)\", icon: faDiceFive},\n                        ]} />\n    </MenuItem>\n\n    {isAiThinking && <AnimatedSpinner /> }\n\n  </MenuBar>\n);\n\nconst IconRadioButtons = ({currentValue, name, options, onChange}) => (\n  <>\n    {options.map(({value, description, icon}) => (\n      <React.Fragment key={`${name}-${value}`}>\n        <IconRadioInput type=\"radio\" id={`${name}-${value}`} name={name} value={value} defaultChecked={currentValue === value} onChange={(e) => onChange(e.target.value)} />\n        <IconRadioLabel htmlFor={`${name}-${value}`}>\n          <FontAwesomeIcon icon={icon} title={description} size=\"2x\" />\n        </IconRadioLabel>\n      </React.Fragment>\n      ))}\n  </>\n);\n\nexport default GameMenu;\n","/*\n * A free and open source chess game using AssemblyScript and React\n * Copyright (C) 2020 mhonert (https://github.com/mhonert)\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nexport const BLACK = -1;\nexport const WHITE = 1;\n\nexport const P = 1; // pawn\nexport const N = 2; // knight\nexport const B = 3; // bishop\nexport const R = 4; // rook\nexport const Q = 5; // queen\nexport const K = 6; // king\n","/*\n * A free and open source chess game using AssemblyScript and React\n * Copyright (C) 2020 mhonert (https://github.com/mhonert)\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {instantiate} from \"assemblyscript/lib/loader\";\n\n\n// Loads and interacts with the wasm engine.\nclass Engine {\n  async init() {\n    if (this.engine) {\n      return; // already initialized\n    }\n    this.engine = await instantiate(fetch(\"./as-api.wasm\"));\n    console.log(\"Engine initialized\");\n  };\n\n  newGame() {\n    this.engine.newGame();\n  }\n\n  calculateMove(board, playerColor, depth) {\n    console.log('Start calculation of move ...');\n\n    const boardArray  = this.engine.__allocArray(this.engine.INT32ARRAY_ID, board);\n    const boardPtr = this.engine.__retain(boardArray);\n\n    const moveEncoded = this.engine.calculateMove(boardPtr, playerColor, depth);\n\n    const move = Move.fromEncodedMove(moveEncoded);\n\n    this.engine.__release(boardPtr);\n\n    console.log('Calculation finished');\n\n    return move;\n  }\n\n  performMove(board, move) {\n    const boardArray  = this.engine.__allocArray(this.engine.INT32ARRAY_ID, board);\n    const boardPtr = this.engine.__retain(boardArray);\n\n    const newBoardPtr = this.engine.performMove(boardPtr, move.encodedMove);\n\n    const newBoard = this.engine.__getArray(newBoardPtr);\n\n    this.engine.__release(boardPtr);\n    this.engine.__release(newBoardPtr);\n\n    return newBoard;\n  }\n\n  generateMoves(board, playerColor) {\n    const boardArray  = this.engine.__allocArray(this.engine.INT32ARRAY_ID, board);\n    const boardPtr = this.engine.__retain(boardArray);\n\n    const movesPtr = this.engine.generatePlayerMoves(boardPtr, playerColor);\n\n    const moves = this.engine.__getArray(movesPtr);\n\n    this.engine.__release(movesPtr);\n    this.engine.__release(boardPtr);\n\n    return moves.map(Move.fromEncodedMove);\n  }\n\n  isCheckMate(board, playerColor) {\n    const boardArray  = this.engine.__allocArray(this.engine.INT32ARRAY_ID, board);\n    const boardPtr = this.engine.__retain(boardArray);\n\n    const result = this.engine.isCheckMate(boardPtr, playerColor);\n\n    this.engine.__release(boardPtr);\n\n    return result;\n  }\n}\n\nexport class Move {\n  constructor(piece, start, end) {\n    this.piece = piece;\n    this.start = start;\n    this.end = end;\n    this.encodedMove = piece | (start << 3) | (end << 10);\n  }\n\n  static fromEncodedMove(encodedMove) {\n    const piece = encodedMove & 0x7; // Bits 0-2\n    const start = (encodedMove >> 3) & 0x7F; // Bits 3-10\n    const end = (encodedMove >> 10) & 0x7F; // Bit 10-17\n\n    return new Move(piece, start, end);\n  }\n}\n\nexport default new Engine();\n\n","/*\n * A free and open source chess game using AssemblyScript and React\n * Copyright (C) 2020 mhonert (https://github.com/mhonert)\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components/macro';\n\nimport engineWorkerLoader from 'workerize-loader!../engine/engine.worker'; // eslint-disable-line import/no-webpack-loader-syntax\nimport { B, BLACK, K, N, P, Q, R, WHITE } from '../engine/constants';\nimport Board from './Board';\nimport GameMenu from './GameMenu';\nimport engine, { Move } from '../engine/engine-wasm-interop';\n\nconst engineWebWorker = engineWorkerLoader();\n\nconst initialState = 0;\n\nconst initialBoard = [\n -R, -N, -B, -Q, -K, -B, -N, -R,\n -P, -P, -P, -P, -P, -P, -P, -P,\n  0,  0,  0,  0,  0,  0,  0,  0,\n  0,  0,  0,  0,  0,  0,  0,  0,\n  0,  0,  0,  0,  0,  0,  0,  0,\n  0,  0,  0,  0,  0,  0,  0,  0,\n  P,  P,  P,  P,  P,  P,  P,  P,\n  R,  N,  B,  Q,  K,  B,  N,  R,\n  0, 0, initialState\n];\n\nconst GameArea = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Game = () => {\n  const [rotateBoard, setRotateBoard] = useState(false);\n  const [activePlayer, setActivePlayer] = useState(WHITE);\n  const [humanPlayerColor, setHumanPlayerColor] = useState(WHITE);\n  const [isAiThinking, setAiThinking] = useState(false);\n  const [board, setBoard] = useState(initialBoard);\n  const [gameEnded, setGameEnded] = useState(false);\n  const [lastMove, setLastMove] = useState({ start: -1, end: -1 });\n  const [availableMoves, setAvailableMoves] = useState(engine.generateMoves(board, activePlayer));\n  const [currentPieceMoves, setCurrentPieceMoves] = useState(new Set());\n  const [winningPlayer, setWinningPlayer] = useState();\n  const [difficultyLevel, setDifficultyLevel] = useState(3);\n  const [previousMoveState, setPreviousMoveState] = useState();\n\n  const clearAvailableMoves = () => setAvailableMoves([]);\n\n  const nextPlayer = playerColor => -playerColor;\n\n  const handleAIMove = (board, move, aiColor) => {\n    setAiThinking(false);\n\n    setLastMove(move);\n\n    const newBoard = engine.performMove(board, move);\n    setBoard(newBoard);\n\n    if (engine.isCheckMate(newBoard, -aiColor)) {\n      setGameEnded(true);\n      setWinningPlayer(aiColor);\n\n      return;\n    }\n\n    const availablePlayerMoves = engine.generateMoves(newBoard, -aiColor);\n    setAvailableMoves(availablePlayerMoves);\n\n    if (availablePlayerMoves.length === 0) {\n      setGameEnded(true);\n\n      return;\n    }\n\n    setActivePlayer(nextPlayer(aiColor));\n  };\n\n  const canMove = (start, end) => {\n    return availableMoves.some(\n      move => move.start === start && move.end === end\n    );\n  };\n\n  const switchSides = () => {\n    setRotateBoard(true);\n    setAiThinking(true);\n    setHumanPlayerColor(-humanPlayerColor);\n    engineWebWorker\n      .calculateMove(board, activePlayer, difficultyLevel)\n      .then(move => handleAIMove(board, move, activePlayer));\n  };\n\n  const startNewGame = () => {\n    engineWebWorker.newGame()\n      .then(() => {\n        setRotateBoard(false);\n        setPreviousMoveState(undefined);\n        setBoard(initialBoard);\n        setActivePlayer(WHITE);\n        setHumanPlayerColor(WHITE);\n        setGameEnded(false);\n        setLastMove({ start: -1, end: -1 });\n        setWinningPlayer(undefined);\n        setAvailableMoves(engine.generateMoves(initialBoard, WHITE));\n        setCurrentPieceMoves(new Set());\n      });\n  };\n\n  const undoMove = () => {\n    const {previousBoard, previousLastMove, previousActivePlayer, previousAvailableMoves} = previousMoveState;\n    setBoard(previousBoard);\n    setLastMove(previousLastMove);\n    setActivePlayer(previousActivePlayer)\n    setAvailableMoves(previousAvailableMoves);\n\n    setPreviousMoveState(undefined);\n  }\n\n  const saveCurrentMoveState = () => {\n    setPreviousMoveState({\n      previousBoard: board,\n      previousLastMove: lastMove,\n      previousActivePlayer: activePlayer,\n      previousAvailableMoves: availableMoves\n    })\n  }\n\n  const handlePlayerMove = (piece, start, end) => {\n    let pieceId = Math.abs(piece);\n    if (gameEnded || isAiThinking) {\n      return;\n    }\n\n    if (!canMove(start, end)) {\n      return;\n    }\n\n    saveCurrentMoveState();\n    setLastMove({ start, end });\n\n    // TODO: Replace browser prompt dialog with own dialog\n    if (pieceId === P && ((activePlayer === WHITE && end < 8) || (activePlayer === BLACK && end >= 56))) {\n      // Promotion\n      const choice = prompt('Choose promotion (Q, R, B, K)', 'Q');\n      switch (choice.toUpperCase()) {\n        case 'R':\n          pieceId = R;\n          break;\n        case 'B':\n          pieceId = B;\n          break;\n        case 'K':\n          pieceId = K;\n          break;\n        case 'Q':\n        default:\n          pieceId = Q;\n          break;\n      }\n    }\n\n    const newBoard = engine.performMove(board, new Move(pieceId, start, end));\n    setBoard(newBoard);\n\n    if (engine.isCheckMate(newBoard, -activePlayer)) {\n      setGameEnded(true);\n      setWinningPlayer(activePlayer);\n\n      return;\n    }\n\n    const moves = engine.generateMoves(newBoard, -activePlayer);\n\n    if (moves.length === 0) {\n      setGameEnded(true);\n      return;\n    }\n\n    setAiThinking(true);\n    clearAvailableMoves();\n    engineWebWorker\n      .calculateMove(newBoard, -activePlayer, difficultyLevel)\n      .then(move => handleAIMove(newBoard, move, -activePlayer));\n\n    setActivePlayer(-activePlayer);\n  };\n\n  const updatePossibleMoves = start => {\n    const possibleMoves = availableMoves\n      .filter(move => move.start === start)\n      .map(move => move.end);\n    setCurrentPieceMoves(new Set(possibleMoves));\n  };\n\n  const clearPossibleMoves = () => {\n    setCurrentPieceMoves(new Set());\n  };\n\n  return (\n    <GameArea>\n      <Board\n        board={board}\n        isRotated={rotateBoard}\n        lastMove={lastMove}\n        currentPieceMoves={currentPieceMoves}\n        handlePlayerMove={handlePlayerMove}\n        updatePossibleMoves={updatePossibleMoves}\n        clearPossibleMoves={clearPossibleMoves}\n      />\n      <GameMenu\n        isAiThinking={isAiThinking}\n        firstMovePlayed={lastMove.start !== -1}\n        humanPlayerColor={humanPlayerColor}\n        gameEnded={gameEnded}\n        winningPlayerColor={winningPlayer}\n        startNewGame={startNewGame}\n        switchSides={switchSides}\n        rotateBoard={() => setRotateBoard(!rotateBoard)}\n        difficultyLevel={difficultyLevel}\n        setDifficultyLevel={setDifficultyLevel}\n        canUndoMove={!!previousMoveState}\n        undoMove={undoMove}\n      />\n    </GameArea>\n  );\n};\n\nexport default Game;\n","/*\n * A free and open source chess game using AssemblyScript and React\n * Copyright (C) 2020 mhonert (https://github.com/mhonert)\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react';\nimport Game from './Game';\nimport { DndProvider } from 'react-dnd';\nimport HTML5Backend from 'react-dnd-html5-backend';\nimport TouchBackend from 'react-dnd-touch-backend';\n\nconst multiBackends = (...backendFactories) =>\n  function(manager) {\n    const backends = backendFactories.map(b => b(manager));\n    return {\n      setup: (...args) =>\n        backends.forEach(b => b.setup.apply(b, args)),\n      teardown: (...args) =>\n        backends.forEach(b => b.teardown.apply(b, args)),\n      connectDropTarget: (...args) =>\n        backends.forEach(b => b.connectDropTarget.apply(b, args)),\n      connectDragPreview: (...args) =>\n        backends.forEach(b => b.connectDragPreview.apply(b, args)),\n      connectDragSource: (...args) =>\n        backends.forEach(b => b.connectDragSource.apply(b, args)),\n    };\n  };\n\nfunction App() {\n  return (\n    <main>\n      <DndProvider backend={multiBackends(HTML5Backend, TouchBackend)}>\n        <Game />\n      </DndProvider>\n    </main>\n  );\n}\n\nexport default App;\n","/*\n * A free and open source chess game using AssemblyScript and React\n * Copyright (C) 2020 mhonert (https://github.com/mhonert)\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './ui/App';\nimport engine from './engine/engine-wasm-interop';\n\n(async () => {\n  await engine.init();\n  ReactDOM.render(<App />, document.getElementById('root'));\n})();\n"],"sourceRoot":""}