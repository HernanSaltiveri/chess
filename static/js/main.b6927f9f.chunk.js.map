{"version":3,"sources":["engine/web.worker.js","ui/img/white_pawn.svg","ui/img/black_pawn.svg","ui/img/white_knight.svg","ui/img/black_knight.svg","ui/img/white_bishop.svg","ui/img/black_bishop.svg","ui/img/white_rook.svg","ui/img/black_rook.svg","ui/img/white_queen.svg","ui/img/black_queen.svg","ui/img/white_king.svg","ui/img/black_king.svg","engine/board.js","engine/pieces.js","engine/move-generation.js","ui/Field.js","ui/Piece.js","ui/Board.js","ui/GameMenu.js","ui/Game.js","ui/App.js","index.js"],"names":["addMethods","methods","module","exports","w","Worker","name","EN_PASSANT","Array","keys","map","i","getState","board","length","whiteKingMoved","blackKingMoved","whiteLeftRookMoved","whiteRightRookMoved","blackLeftRookMoved","blackRightRookMoved","setWhiteLeftRookMoved","setWhiteRightRookMoved","setBlackLeftRookMoved","setBlackRightRookMoved","pieces","PAWN","id","value","KNIGHT","BISHOP","ROOK","QUEEN","KING","piecesSortedById","Object","values","sort","pieceA","pieceB","getPieceById","pieceId","P","N","B","R","Q","K","isValidPawnMove","activeColor","piece","start","end","ignoreCheck","pieceColor","Math","sign","targetPieceColor","moveResultsInCheck","direction","baseLineStart","baseLineEnd","isBaseLine","noObstacleInBetween","enPassentPossible","pos","state","getPromoPieces","KNIGHT_DIRECTIONS","isValidKnightMove","some","dir","DIAGONAL_DIRECTIONS","isValidBishopMove","generateBishopMoves","flatMap","offset","moves","push","ORTHOGONAL_DIRECTIONS","isValidRookMove","generateRookMoves","KING_DIRECTIONS","concat","isValidKingMove","isAttacked","validDirection","performMove","move","removedFigure","abs","enPassant","setWhiteKingMoved","setBlackKingMoved","clearEnPassentPossible","setEnPassentPossible","color","index","isInCheck","kingPos","findIndex","item","previousState","check","undoMove","isValidMoveFns","opponentColor","position","isValidMove","generateMovesFns","filter","promoPiece","generateMoves","generateMovesFn","isCheckMate","FieldDiv","styled","div","props","markColor","Field","boardIndex","children","movePiece","isStart","isEnd","isPossibleTarget","useDrop","accept","drop","monitor","dropRef","fieldMarkStyle","ref","style","className","whiteImages","whitePawn","whiteKnight","whiteBishop","whiteRook","whiteQueen","whiteKing","blackImages","blackPawn","blackKnight","blackBishop","blackRook","blackQueen","blackKing","PieceContainer","PieceImage","img","Piece","onPickup","onDrop","useDrag","type","begin","dropResult","collect","isDragging","drag","src","alt","BoardGrid","Board","lastMove","currentPieceMoves","handlePlayerMove","updatePossibleMoves","clearPossibleMoves","idx","key","has","MenuBar","MenuItem","hidden","GameButton","button","ThinkingIndicator","rotate","keyframes","AnimatedDualRing","GameResult","GameMenu","isAiThinking","gameEnded","winningPlayerColor","startNewGame","forceAiMove","searchDepth","setSearchDepth","disabled","onClick","title","min","max","onChange","e","target","engine","engineWorker","initialBoard","GameArea","Game","useState","activePlayer","setActivePlayer","setAiThinking","setBoard","setGameEnded","setLastMove","availableMoves","setAvailableMoves","Set","setCurrentPieceMoves","winningPlayer","setWinningPlayer","handleAIMove","aiColor","newBoard","slice","availablePlayerMoves","canMove","prompt","toUpperCase","calculateMove","then","possibleMoves","undefined","multiBackends","backendFactories","manager","backends","b","setup","args","forEach","apply","teardown","connectDropTarget","connectDragPreview","connectDragSource","App","backend","HTML5Backend","TouchBackend","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b6927f9f.chunk.js","sourcesContent":["\n\t\t\t\tvar addMethods = require(\"../../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = [\"calculateMove\"]\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"e5a079cb85634e6c4f3b.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t","module.exports = __webpack_public_path__ + \"static/media/white_pawn.41da1b5b.svg\";","module.exports = __webpack_public_path__ + \"static/media/black_pawn.3cab4671.svg\";","module.exports = __webpack_public_path__ + \"static/media/white_knight.3ece5029.svg\";","module.exports = __webpack_public_path__ + \"static/media/black_knight.88ad52be.svg\";","module.exports = __webpack_public_path__ + \"static/media/white_bishop.36a96cf8.svg\";","module.exports = __webpack_public_path__ + \"static/media/black_bishop.341337f4.svg\";","module.exports = __webpack_public_path__ + \"static/media/white_rook.007b43f5.svg\";","module.exports = __webpack_public_path__ + \"static/media/black_rook.e7f61dec.svg\";","module.exports = __webpack_public_path__ + \"static/media/white_queen.51d538db.svg\";","module.exports = __webpack_public_path__ + \"static/media/black_queen.87612c77.svg\";","module.exports = __webpack_public_path__ + \"static/media/white_king.9e716b1e.svg\";","module.exports = __webpack_public_path__ + \"static/media/black_king.12ae1430.svg\";","/*\n * Chess App using React and Web Workers\n * Copyright (C) 2019 mhonert (https://github.com/mhonert)\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nexport const BLACK = -1;\nexport const WHITE = 1;\n\nexport const BOARD_BORDER = 99;\nexport const EMPTY = 0;\n\nexport const __ = BOARD_BORDER;\n\n// Bit-Patterns for Board state\nexport const WHITE_KING_MOVED = 1 << 7;\nexport const BLACK_KING_MOVED = 1 << 8;\nexport const WHITE_LEFT_ROOK_MOVED = 1 << 9;\nexport const WHITE_RIGHT_ROOK_MOVED = 1 << 10;\nexport const BLACK_LEFT_ROOK_MOVED = 1 << 11;\nexport const BLACK_RIGHT_ROOK_MOVED = 1 << 12;\nexport const EN_PASSANT = [...Array(16).keys()].map(i => 1 << (i + 13));\n\nexport const getState = board => board[board.length - 1];\n\nexport const whiteKingMoved = board =>\n  (getState(board) & WHITE_KING_MOVED) !== 0;\nexport const blackKingMoved = board =>\n  (getState(board) & BLACK_KING_MOVED) !== 0;\nexport const whiteLeftRookMoved = board =>\n  (getState(board) & WHITE_LEFT_ROOK_MOVED) !== 0;\nexport const whiteRightRookMoved = board =>\n  (getState(board) & WHITE_RIGHT_ROOK_MOVED) !== 0;\nexport const blackLeftRookMoved = board =>\n  (getState(board) & BLACK_LEFT_ROOK_MOVED) !== 0;\nexport const blackRightRookMoved = board =>\n  (getState(board) & BLACK_RIGHT_ROOK_MOVED) !== 0;\n\nexport const setWhiteKingMoved = board => {\n  board[board.length - 1] = getState(board) | WHITE_KING_MOVED;\n};\n\nexport const setBlackKingMoved = board => {\n  board[board.length - 1] = getState(board) | BLACK_KING_MOVED;\n};\n\nexport const setWhiteLeftRookMoved = board => {\n  board[board.length - 1] = getState(board) | WHITE_LEFT_ROOK_MOVED;\n};\n\nexport const setWhiteRightRookMoved = board => {\n  board[board.length - 1] = getState(board) | WHITE_RIGHT_ROOK_MOVED;\n};\n\nexport const setBlackLeftRookMoved = board => {\n  board[board.length - 1] = getState(board) | BLACK_LEFT_ROOK_MOVED;\n};\n\nexport const setBlackRightRookMoved = board => {\n  board[board.length - 1] = getState(board) | BLACK_RIGHT_ROOK_MOVED;\n};\n","/*\n * Chess App using React and Web Workers\n * Copyright (C) 2019 mhonert (https://github.com/mhonert)\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nexport const pieces = {\n  PAWN: {\n    id: 1,\n    name: 'Pawn',\n    value: 1\n  },\n\n  KNIGHT: {\n    id: 2,\n    name: 'Knight',\n    value: 3\n  },\n\n  BISHOP: {\n    id: 3,\n    name: 'Bishop',\n    value: 3\n  },\n\n  ROOK: {\n    id: 4,\n    name: 'Rook',\n    value: 5\n  },\n\n  QUEEN: {\n    id: 5,\n    name: 'Queen',\n    value: 9\n  },\n\n  KING: {\n    id: 6,\n    name: 'King',\n    value: 10 // actual value is not relevant => game is lost anyway in case of check mate\n  }\n};\n\nconst piecesSortedById = Object.values(pieces)\n  .sort((pieceA, pieceB) => pieceA.id - pieceB.id)\n  .map(value => value);\n\n\nexport const getPieceById = (pieceId) => {\n  return piecesSortedById[pieceId - 1];\n}\n\nexport const P = pieces.PAWN.id;\nexport const N = pieces.KNIGHT.id;\nexport const B = pieces.BISHOP.id;\nexport const R = pieces.ROOK.id;\nexport const Q = pieces.QUEEN.id;\nexport const K = pieces.KING.id;\n","/*\n * Chess App using React and Web Workers\n * Copyright (C) 2019 mhonert (https://github.com/mhonert)\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {\n  BLACK,\n  blackKingMoved,\n  blackLeftRookMoved,\n  blackRightRookMoved,\n  BOARD_BORDER, EN_PASSANT,\n  getState,\n  setBlackKingMoved,\n  setBlackLeftRookMoved,\n  setBlackRightRookMoved,\n  setWhiteKingMoved,\n  setWhiteLeftRookMoved,\n  setWhiteRightRookMoved,\n  WHITE,\n  whiteKingMoved,\n  whiteLeftRookMoved,\n  whiteRightRookMoved\n} from './board';\nimport { getPieceById, pieces } from './pieces';\n\nconst isValidPawnMove = (\n  board,\n  activeColor,\n  piece,\n  start,\n  end,\n  ignoreCheck = false\n) => {\n  if (board[end] === BOARD_BORDER) {\n    return false;\n  }\n\n  const pieceColor = Math.sign(board[start]);\n  if (activeColor !== pieceColor) {\n    return false;\n  }\n\n  const targetPieceColor = Math.sign(board[end]);\n\n  if (pieceColor === targetPieceColor) {\n    return false;\n  }\n\n  if (\n    !ignoreCheck &&\n    moveResultsInCheck(board, { piece, start, end }, activeColor)\n  ) {\n    return false;\n  }\n\n  const direction = -pieceColor;\n\n  // Horizontal => 1 field move\n  if (end - start === 10 * direction && board[end] === 0) {\n    return true;\n  }\n\n  // Horizontal => 2 fields from base line\n  const baseLineStart = pieceColor === WHITE ? 81 : 31;\n  const baseLineEnd = pieceColor === WHITE ? 88 : 38;\n\n  const isBaseLine = start >= baseLineStart && start <= baseLineEnd;\n  const noObstacleInBetween = board[start + direction * 10] === 0;\n  if (\n    end - start === 20 * direction &&\n    isBaseLine &&\n    noObstacleInBetween &&\n    board[end] === 0\n  ) {\n    return true;\n  }\n\n  // Diagonal => hit other piece\n  if (\n    (end - start === 11 * direction || end - start === 9 * direction) &&\n    board[end] !== 0\n  ) {\n    return true;\n  }\n\n  if (\n    (end - start === 11 * direction || end - start === 9 * direction) &&\n    board[end] === 0 &&\n    enPassentPossible(board, pieceColor, end)\n  ) {\n    return true;\n  }\n\n  return false;\n};\n\nconst enPassentPossible = (board, pieceColor, pos) => {\n  const state = getState(board);\n  if (pos > 40 && pos < 49 && pieceColor === WHITE) {\n    return (state & EN_PASSANT[pos - 41]) !== 0;\n  } else if (pos > 70 && pos < 79 && pieceColor === BLACK) {\n    return (state & EN_PASSANT[pos - 71 + 8]) !== 0;\n  }\n\n  return false;\n};\n\nconst getPromoPieces = () => [\n  pieces.QUEEN,\n  pieces.ROOK,\n  pieces.BISHOP,\n  pieces.KNIGHT\n];\n\nconst generatePawnMoves = (board, activeColor, piece, start) => {\n  const direction = -activeColor;\n\n  if (activeColor === WHITE && start < 39) {\n    // Check white pawn promotion\n    return [9, 10, 11, 20]\n      .filter(offset =>\n        isValidPawnMove(\n          board,\n          activeColor,\n          piece,\n          start,\n          start + offset * direction\n        )\n      )\n      .flatMap(offset =>\n        getPromoPieces().map(promoPiece => ({\n          piece: promoPiece,\n          start,\n          end: start + offset * direction\n        }))\n      );\n  } else if (activeColor === BLACK && start > 80) {\n    // Check black pawn promotion\n    return [9, 10, 11, 20]\n      .filter(offset =>\n        isValidPawnMove(\n          board,\n          activeColor,\n          piece,\n          start,\n          start + offset * direction\n        )\n      )\n      .flatMap(offset =>\n        getPromoPieces().map(promoPiece => ({\n          piece: promoPiece,\n          start,\n          end: start + offset * direction\n        }))\n      );\n  }\n\n  return [9, 10, 11, 20]\n    .filter(offset =>\n      isValidPawnMove(\n        board,\n        activeColor,\n        piece,\n        start,\n        start + offset * direction\n      )\n    )\n    .map(offset => ({ piece, start, end: start + offset * direction }));\n};\n\nconst KNIGHT_DIRECTIONS = [21, 19, 12, 8, -12, -21, -19, -8];\n\nconst isValidKnightMove = (\n  board,\n  activeColor,\n  piece,\n  start,\n  end,\n  ignoreCheck = false\n) => {\n  if (board[end] === BOARD_BORDER) {\n    return false;\n  }\n\n  const pieceColor = Math.sign(board[start]);\n  if (activeColor !== pieceColor) {\n    return false;\n  }\n\n  const targetPieceColor = Math.sign(board[end]);\n\n  if (pieceColor === targetPieceColor) {\n    return false;\n  }\n\n  if (\n    !ignoreCheck &&\n    moveResultsInCheck(board, { piece, start, end }, activeColor)\n  ) {\n    return false;\n  }\n\n  return KNIGHT_DIRECTIONS.some(dir => end === start + dir);\n};\n\nconst generateKnightMoves = (board, activeColor, piece, start) => {\n  return KNIGHT_DIRECTIONS.filter(offset =>\n    isValidKnightMove(board, activeColor, piece, start, start + offset)\n  ).map(offset => ({ piece, start, end: start + offset }));\n};\n\nconst DIAGONAL_DIRECTIONS = [9, 11, -9, -11];\n\nconst isValidBishopMove = (\n  board,\n  activeColor,\n  piece,\n  start,\n  end,\n  ignoreCheck = false\n) => {\n  if (board[end] === BOARD_BORDER) {\n    return false;\n  }\n\n  const pieceColor = Math.sign(board[start]);\n  if (activeColor !== pieceColor) {\n    return false;\n  }\n\n  const targetPieceColor = Math.sign(board[end]);\n\n  if (pieceColor === targetPieceColor) {\n    return false;\n  }\n\n  if (\n    !ignoreCheck &&\n    moveResultsInCheck(board, { piece, start, end }, activeColor)\n  ) {\n    return false;\n  }\n\n  return DIAGONAL_DIRECTIONS.some(dir => {\n    for (let i = 1; i <= 7; i++) {\n      // Target reached?\n      if (end === start + dir * i) {\n        return true;\n      }\n\n      // Obstacle in the way?\n      if (board[start + dir * i] !== 0) {\n        return false;\n      }\n    }\n    return false;\n  });\n};\n\nconst generateBishopMoves = (board, activeColor, piece, start) => {\n  return DIAGONAL_DIRECTIONS.flatMap(offset => {\n    const moves = [];\n    for (let i = 1; i <= 7; i++) {\n      if (\n        !isValidBishopMove(board, activeColor, piece, start, start + offset * i)\n      ) {\n        if (board[start + offset * i] === 0) {\n          continue;\n        }\n        return moves;\n      }\n      moves.push({ piece, start, end: start + offset * i });\n    }\n    return moves;\n  });\n};\n\nconst ORTHOGONAL_DIRECTIONS = [1, 10, -1, -10];\n\nconst isValidRookMove = (\n  board,\n  activeColor,\n  piece,\n  start,\n  end,\n  ignoreCheck = false\n) => {\n  if (board[end] === BOARD_BORDER) {\n    return false;\n  }\n\n  const pieceColor = Math.sign(board[start]);\n  if (activeColor !== pieceColor) {\n    return false;\n  }\n\n  const targetPieceColor = Math.sign(board[end]);\n\n  if (pieceColor === targetPieceColor) {\n    return false;\n  }\n\n  if (\n    !ignoreCheck &&\n    moveResultsInCheck(board, { piece, start, end }, activeColor)\n  ) {\n    return false;\n  }\n\n  return ORTHOGONAL_DIRECTIONS.some(dir => {\n    for (let i = 1; i <= 7; i++) {\n      // Target reached?\n      if (end === start + dir * i) {\n        return true;\n      }\n\n      // Obstacle in the way?\n      if (board[start + dir * i] !== 0) {\n        return false;\n      }\n    }\n\n    return false;\n  });\n};\n\nconst generateRookMoves = (board, activeColor, piece, start) => {\n  return ORTHOGONAL_DIRECTIONS.flatMap(offset => {\n    const moves = [];\n    for (let i = 1; i <= 7; i++) {\n      if (\n        !isValidRookMove(board, activeColor, piece, start, start + offset * i)\n      ) {\n        if (board[start + offset * i] === 0) {\n          continue;\n        }\n        return moves;\n      }\n      moves.push({ piece, start, end: start + offset * i });\n    }\n    return moves;\n  });\n};\n\nconst isValidQueenMove = (\n  board,\n  activeColor,\n  piece,\n  start,\n  end,\n  ignoreCheck = false\n) => {\n  return (\n    isValidBishopMove(board, activeColor, piece, start, end, ignoreCheck) ||\n    isValidRookMove(board, activeColor, piece, start, end, ignoreCheck)\n  );\n};\n\nconst generateQueenMoves = (board, activeColor, piece, start) => {\n  return generateBishopMoves(board, activeColor, piece, start).concat(\n    generateRookMoves(board, activeColor, piece, start)\n  );\n};\n\nconst KING_DIRECTIONS = ORTHOGONAL_DIRECTIONS.concat(DIAGONAL_DIRECTIONS);\n\nconst isValidKingMove = (\n  board,\n  activeColor,\n  piece,\n  start,\n  end,\n  ignoreCheck = false\n) => {\n  if (board[end] === BOARD_BORDER) {\n    return false;\n  }\n\n  const pieceColor = Math.sign(board[start]);\n  if (activeColor !== pieceColor) {\n    return false;\n  }\n\n  const targetPieceColor = Math.sign(board[end]);\n\n  if (pieceColor === targetPieceColor) {\n    return false;\n  }\n\n  // White: Small castle\n  if (!whiteKingMoved(board)) {\n    if (\n      !whiteRightRookMoved(board) &&\n      activeColor === WHITE &&\n      start === 95 &&\n      end === 97 &&\n      board[96] === 0 &&\n      board[97] === 0 &&\n      !isAttacked(board, -activeColor, 95) &&\n      !isAttacked(board, -activeColor, 96) &&\n      !isAttacked(board, -activeColor, 97)\n    ) {\n      return true;\n    }\n\n    // White: Big castle\n    if (\n      !whiteLeftRookMoved(board) &&\n      activeColor === WHITE &&\n      start === 95 &&\n      end === 93 &&\n      board[94] === 0 &&\n      board[93] === 0 &&\n      board[92] === 0 &&\n      !isAttacked(board, -activeColor, 95) &&\n      !isAttacked(board, -activeColor, 94) &&\n      !isAttacked(board, -activeColor, 93) &&\n      !isAttacked(board, -activeColor, 92)\n    ) {\n      return true;\n    }\n  }\n\n  if (!blackKingMoved(board)) {\n    // Black: Small castle\n    if (\n      !blackRightRookMoved(board) &&\n      activeColor === BLACK &&\n      start === 25 &&\n      end === 27 &&\n      board[26] === 0 &&\n      board[27] === 0 &&\n      !isAttacked(board, -activeColor, 25) &&\n      !isAttacked(board, -activeColor, 26) &&\n      !isAttacked(board, -activeColor, 27)\n    ) {\n      return true;\n    }\n\n    // Black: Big castle\n    if (\n      !blackLeftRookMoved(board) &&\n      activeColor === BLACK &&\n      start === 25 &&\n      end === 23 &&\n      board[24] === 0 &&\n      board[23] === 0 &&\n      board[22] === 0 &&\n      !isAttacked(board, -activeColor, 25) &&\n      !isAttacked(board, -activeColor, 24) &&\n      !isAttacked(board, -activeColor, 23) &&\n      !isAttacked(board, -activeColor, 22)\n    ) {\n      return true;\n    }\n  }\n\n  const validDirection = KING_DIRECTIONS.some(dir => start + dir === end);\n\n  return (\n    validDirection &&\n    (ignoreCheck ||\n      !moveResultsInCheck(board, { piece, start, end }, activeColor))\n  );\n};\n\nconst generateKingMoves = (board, activeColor, piece, start) => {\n  const moves = KING_DIRECTIONS.filter(offset =>\n    isValidKingMove(board, activeColor, piece, start, start + offset)\n  ).map(offset => ({ piece, start, end: start + offset }));\n\n  if (\n    (activeColor === WHITE && start === 95) ||\n    (activeColor === BLACK && start === 25)\n  ) {\n    if (isValidKingMove(board, activeColor, piece, start, start + 2)) {\n      moves.push({ piece, start, end: start + 2 });\n    }\n    if (isValidKingMove(board, activeColor, piece, start, start - 2)) {\n      moves.push({ piece, start, end: start - 2 });\n    }\n  }\n\n  return moves;\n};\n\nexport const performMove = (board, move) => {\n  const { piece, start, end } = move;\n  const pieceColor = Math.sign(board[start]);\n\n  let removedFigure = board[end];\n\n  board[start] = 0;\n  if (piece.id === 1 && board[end] === 0) {\n    if (Math.abs(start - end) === 9) {\n      // En passant\n      removedFigure = board[start + pieceColor];\n      board[start + pieceColor] = 0;\n      move.enPassant = true;\n    } else if (Math.abs(start - end) === 11) {\n      // En passant\n      removedFigure = board[start - pieceColor];\n      board[start - pieceColor] = 0;\n      move.enPassant = true;\n    }\n  }\n  board[end] = piece.id * pieceColor;\n\n  if (piece.id === 6) {\n    if (pieceColor === WHITE) {\n      setWhiteKingMoved(board);\n    } else {\n      setBlackKingMoved(board);\n    }\n\n    if (Math.abs(start - end) === 2) {\n      // Castle\n      if (end === 97) {\n        board[96] = board[98];\n        board[98] = 0;\n        setWhiteRightRookMoved(board);\n      } else if (end === 93) {\n        board[94] = board[91];\n        board[91] = 0;\n        setWhiteLeftRookMoved(board);\n      } else if (end === 27) {\n        board[26] = board[28];\n        board[28] = 0;\n        setBlackRightRookMoved(board);\n      } else if (end === 23) {\n        board[24] = board[21];\n        board[21] = 0;\n        setBlackLeftRookMoved(board);\n      }\n    }\n  }\n\n  if (piece.id === 4) {\n    if (start === 91) {\n      setWhiteLeftRookMoved(board);\n    } else if (start === 98) {\n      setWhiteRightRookMoved(board);\n    } else if (start === 21) {\n      setBlackLeftRookMoved(board);\n    } else if (start === 28) {\n      setBlackRightRookMoved(board);\n    }\n  }\n\n  clearEnPassentPossible(board);\n\n  if (piece.id === 1 && Math.abs(start - end) === 20) {\n    setEnPassentPossible(board, start, pieceColor);\n  }\n\n  return removedFigure;\n};\n\nconst clearEnPassentPossible = board => {\n  board[board.length - 1] = getState(board) & (EN_PASSANT[0] - 1);\n};\n\nconst setEnPassentPossible = (board, pos, color) => {\n  const index = color === BLACK ? pos - 31 : pos - 81 + 8;\n  board[board.length - 1] = getState(board) | EN_PASSANT[index];\n};\n\nexport const undoMove = (\n  board,\n  { start, end, piece, enPassant },\n  removedFigure,\n  previousState\n) => {\n  board[board.length - 1] = previousState;\n  board[start] = board[end];\n  board[end] = enPassant ? 0 : removedFigure;\n\n  if (enPassant) {\n    const pieceColor = Math.sign(board[start]);\n\n    if (Math.abs(start - end) === 9) {\n      board[start + pieceColor] = removedFigure;\n    } else if (Math.abs(start - end) === 11) {\n      board[start - pieceColor] = removedFigure;\n    }\n  }\n\n  if (piece.id === 6) {\n    if (Math.abs(start - end) === 2) {\n      // Undo Castle\n      if (end === 97) {\n        board[98] = board[96];\n        board[96] = 0;\n      } else if (end === 93) {\n        board[91] = board[94];\n        board[94] = 0;\n      } else if (end === 27) {\n        board[28] = board[26];\n        board[26] = 0;\n      } else if (end === 23) {\n        board[21] = board[24];\n        board[24] = 0;\n      }\n    }\n  }\n};\n\nexport const isInCheck = (board, activeColor) => {\n  const kingPos = board.findIndex(\n    item => item === pieces.KING.id * activeColor\n  );\n  if (!kingPos) {\n    return true;\n  }\n\n  return isAttacked(board, -activeColor, kingPos);\n};\n\nexport const moveResultsInCheck = (board, move, activeColor) => {\n  const previousState = getState(board);\n  const removedFigure = performMove(board, move);\n  const check = isInCheck(board, activeColor);\n  undoMove(board, move, removedFigure, previousState);\n\n  return check;\n};\n\nconst isValidMoveFns = [\n  isValidPawnMove,\n  isValidKnightMove,\n  isValidBishopMove,\n  isValidRookMove,\n  isValidQueenMove,\n  isValidKingMove\n];\n\nexport const isValidMove = (board, playerColor, piece, start, end) => {\n  const isValidMove = isValidMoveFns[piece.id - 1];\n\n  return isValidMove(board, playerColor, piece, start, end, true);\n}\n\nexport const isAttacked = (board, opponentColor, position) => {\n  return board.some((item, index) => {\n    if (index === board.length - 1) {\n      return false;\n    }\n\n    if (item === 0 || item === BOARD_BORDER) {\n      return false;\n    }\n\n    const pieceColor = Math.sign(item);\n    if (pieceColor !== opponentColor) {\n      return false;\n    }\n\n    const pieceId = Math.abs(item);\n    const piece = getPieceById(pieceId);\n    const isValidMove = isValidMoveFns[pieceId - 1];\n\n    return isValidMove(board, opponentColor, piece, index, position, true);\n  });\n};\n\nconst generateMovesFns = [\n  generatePawnMoves,\n  generateKnightMoves,\n  generateBishopMoves,\n  generateRookMoves,\n  generateQueenMoves,\n  generateKingMoves\n];\n\nexport const generateMoves = (board, activeColor) => {\n  return board.flatMap((item, index) => {\n    if (index === board.length - 1) {\n      return [];\n    }\n\n    if (item === 0 || item === BOARD_BORDER) {\n      return [];\n    }\n\n    const pieceColor = Math.sign(item);\n    if (pieceColor !== activeColor) {\n      return [];\n    }\n\n    const pieceId = Math.abs(item);\n    const piece = getPieceById(pieceId);\n    const generateMovesFn = generateMovesFns[pieceId - 1];\n\n    return generateMovesFn(board, activeColor, piece, index);\n  });\n};\n\nexport const isCheckMate = (board, activeColor) => {\n  return (\n    isInCheck(board, activeColor) &&\n    generateMoves(board, activeColor).length === 0\n  );\n};\n","/*\n * Chess App using React and Web Workers\n * Copyright (C) 2019 mhonert (https://github.com/mhonert)\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react';\nimport { useDrop } from 'react-dnd';\nimport styled from 'styled-components/macro';\n\nconst FieldDiv = styled.div`\n  position: relative;\n\n  &:nth-child(even) {\n    background-color: #f8f5df;\n  }\n\n  &.move-mark:before {\n    position: absolute;\n    top: 4%;\n    left: 4%;\n    bottom: 4%;\n    right: 4%;\n    content: '';\n    display: block;\n    border: 0.5vh solid ${props => props.markColor};\n    border-radius: 50%;\n  }\n`;\n\nconst Field = ({\n  boardIndex,\n  children,\n  movePiece,\n  isStart,\n  isEnd,\n  isPossibleTarget\n}) => {\n  const [, dropRef] = useDrop({\n    accept: 'PIECE',\n    drop: (item, monitor) => {\n      movePiece(item.piece, item.boardIndex, boardIndex);\n    }\n  });\n\n  const fieldMarkStyle =\n    isStart || isEnd || isPossibleTarget ? 'move-mark' : '';\n\n  // prettier-ignore\n  const markColor = isPossibleTarget ? '#80fa72'\n                  : isStart ? 'lightpink'\n                  : isEnd ? 'salmon'\n                  : 'white';\n\n  return (\n    <FieldDiv\n      ref={dropRef}\n      style={{ position: 'relative' }}\n      isStart={isStart}\n      markColor={markColor}\n      className={fieldMarkStyle}\n    >\n      {children}\n    </FieldDiv>\n  );\n};\n\nexport default Field;\n","/*\n * Chess App using React and Web Workers\n * Copyright (C) 2019 mhonert (https://github.com/mhonert)\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react';\nimport { useDrag } from 'react-dnd';\nimport styled from 'styled-components/macro';\n\nimport whitePawn from './img/white_pawn.svg';\nimport blackPawn from './img/black_pawn.svg';\nimport whiteKnight from './img/white_knight.svg';\nimport blackKnight from './img/black_knight.svg';\nimport whiteBishop from './img/white_bishop.svg';\nimport blackBishop from './img/black_bishop.svg';\nimport whiteRook from './img/white_rook.svg';\nimport blackRook from './img/black_rook.svg';\nimport whiteQueen from './img/white_queen.svg';\nimport blackQueen from './img/black_queen.svg';\nimport whiteKing from './img/white_king.svg';\nimport blackKing from './img/black_king.svg';\n\nconst whiteImages = [\n  whitePawn,\n  whiteKnight,\n  whiteBishop,\n  whiteRook,\n  whiteQueen,\n  whiteKing\n];\n\nconst blackImages = [\n  blackPawn,\n  blackKnight,\n  blackBishop,\n  blackRook,\n  blackQueen,\n  blackKing\n];\n\nconst PieceContainer = styled.div`\n  // Workaround for wrong Drag'n'Drop preview image rendering in Chrome (see https://github.com/react-dnd/react-dnd/issues/832)\n  -webkit-transform: translate3d(0, 0, 0);\n`;\n\nconst PieceImage = styled.img`\n  display: block;\n  margin: 13%;\n  height: 74%;\n  width: 74%;\n\n  &.dragging {\n    visibility: hidden;\n  }\n`;\n\nconst Piece = ({ boardIndex, color, piece, onPickup, onDrop }) => {\n  const img =\n    color === 'black' ? blackImages[piece.id - 1] : whiteImages[piece.id - 1];\n\n  const [{ isDragging }, drag] = useDrag({\n    item: {\n      type: 'PIECE',\n      piece,\n      boardIndex\n    },\n    begin: monitor => onPickup(boardIndex),\n    end: dropResult => onDrop(boardIndex),\n    // previewOptions: {\n    //   captureDraggingState: true\n    // },\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging()\n    })\n  });\n\n  return (\n    <PieceContainer ref={drag}>\n      <PieceImage\n        src={img}\n        alt={piece.name}\n        className={isDragging ? 'dragging' : ''}\n      />\n    </PieceContainer>\n  );\n};\n\nexport default Piece;\n","/*\n * Chess App using React and Web Workers\n * Copyright (C) 2019 mhonert (https://github.com/mhonert)\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react';\nimport { __ } from '../engine/board';\nimport Field from './Field';\nimport Piece from './Piece';\nimport { getPieceById } from '../engine/pieces';\nimport styled from 'styled-components/macro';\n\nconst BoardGrid = styled.div`\n    display: grid;\n    grid-template-columns: 0 repeat(8, 1fr);\n    grid-template-rows: 0 repeat(8, 1fr);\n\n    border-right: 1px solid salmon;\n    \n    // always keep board size rectangular and maximized to the smaller axis\n    @media (min-aspect-ratio: 99/100) {\n          width: 100vh;\n          height: 100vh;\n    }\n    @media (max-aspect-ratio: 100/99) {\n          width: 100vw;\n          height: 100vw;\n    }\n`;\n\nconst Board = ({board, lastMove, currentPieceMoves, handlePlayerMove, updatePossibleMoves, clearPossibleMoves}) => {\n  return (\n    <BoardGrid>\n      {board.map((item, idx) => {\n        if (idx % 10 === 9 || idx >= 100 || idx < 10) {\n          return null; // skip\n        }\n\n        if (item === __) {\n          return <div key={idx} className=\"board_frame\" />;\n        }\n\n        return (\n          <Field\n            key={idx}\n            boardIndex={idx}\n            movePiece={handlePlayerMove}\n            isStart={idx === lastMove.start}\n            isEnd={idx === lastMove.end}\n            isPossibleTarget={currentPieceMoves.has(idx)}\n          >\n            {item !== 0 && (\n              <Piece\n                boardIndex={idx}\n                color={item < 0 ? 'black' : 'white'}\n                piece={getPieceById(Math.abs(item))}\n                onPickup={updatePossibleMoves}\n                onDrop={clearPossibleMoves}\n              />\n            )}\n          </Field>\n        );\n      })}\n    </BoardGrid>\n  );\n};\n\nexport default Board;","/*\n * Chess App using React and Web Workers\n * Copyright (C) 2019 mhonert (https://github.com/mhonert)\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react';\nimport styled from 'styled-components/macro';\nimport { WHITE } from '../engine/board';\nimport { keyframes } from 'styled-components/macro';\n\nconst MenuBar = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 1rem;\n  text-align: center;\n  \n  // center menubar below board, if window width is < window height\n  @media (max-aspect-ratio: 100/99) {\n      width: 100%;\n  }\n`;\n\nconst MenuItem = styled.div`\n  display: ${props => (props.hidden ? 'none' : 'flex')};\n  align-self: center;\n  padding-bottom: 0.5rem;\n`;\n\nconst GameButton = styled.button`\n  background: none;\n  border: 1px solid salmon;\n  border-radius: 0.5rem;\n  color: salmon;\n  font-size: 1rem;\n  font-weight: bold;\n  padding: 0.5rem;\n  width: 11rem;\n\n  & :hover {\n    background: salmon;\n    color: white;\n    cursor: pointer;\n  }\n`;\n\nconst ThinkingIndicator = styled(MenuItem)`\n  font-weight: bold;\n  margin-left: 1rem;\n  font-size: 1rem;\n  text-align: center;\n  color: salmon;\n`;\n\nconst rotate = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\nconst AnimatedDualRing = styled.div`\n  /* Animated spinner from https://loading.io/css/ */\n  display: inline-block;\n  width: 128px;\n  height: 128px;\n  & :after {\n    content: ' ';\n    display: block;\n    width: 80px;\n    height: 80px;\n    margin: 8px;\n    border-radius: 50%;\n    border: 6px solid salmon;\n    border-color: salmon transparent salmon transparent;\n    animation: ${rotate} 1.2s linear infinite;\n  }\n`;\n\nconst GameResult = styled(MenuItem)`\n  padding-top: 2rem;\n  font-weight: bold;\n  font-size: 1.5rem;\n  color: salmon;\n`;\n\nconst colorName = color => (color === WHITE ? 'White' : 'Black');\n\nconst GameMenu = ({\n  isAiThinking,\n  gameEnded,\n  winningPlayerColor,\n  startNewGame,\n  forceAiMove,\n  searchDepth,\n  setSearchDepth\n}) => {\n  return (\n    <MenuBar>\n      <MenuItem hidden={isAiThinking}>\n        <GameButton disabled={isAiThinking} onClick={startNewGame}>\n          New Game\n        </GameButton>\n      </MenuItem>\n      <MenuItem hidden={isAiThinking || gameEnded}>\n        <GameButton\n          disabled={isAiThinking || gameEnded}\n          onClick={forceAiMove}\n          title=\"Let computer play the current color\"\n        >\n          Computer Move\n        </GameButton>\n      </MenuItem>\n      <MenuItem hidden={isAiThinking}>\n        <label>\n          <input\n            type=\"range\"\n            min=\"3\"\n            max=\"5\"\n            title=\"Difficulty\"\n            value={searchDepth}\n            onChange={e => setSearchDepth(e.target.value)}\n          />\n        </label>\n      </MenuItem>\n\n      {isAiThinking && (\n        <ThinkingIndicator>\n          <AnimatedDualRing>Thinking ...</AnimatedDualRing>\n        </ThinkingIndicator>\n      )}\n      {gameEnded && (\n        <GameResult>\n          {winningPlayerColor\n            ? colorName(winningPlayerColor) + ' wins!'\n            : 'Stalemate!'}\n        </GameResult>\n      )}\n    </MenuBar>\n  );\n};\n\nexport default GameMenu;\n","/*\n * Chess App using React and Web Workers\n * Copyright (C) 2019 mhonert (https://github.com/mhonert)\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react';\nimport { useState } from 'react';\nimport styled from 'styled-components/macro';\n\nimport engineWorker from 'workerize-loader!../engine/web.worker'; // eslint-disable-line import/no-webpack-loader-syntax\n\nimport {\n  generateMoves,\n  isCheckMate,\n  performMove\n} from '../engine/move-generation';\nimport { __, WHITE } from '../engine/board';\nimport { B, K, N, P, pieces, Q, R } from '../engine/pieces';\nimport Board from './Board';\nimport GameMenu from './GameMenu';\n\nconst engine = engineWorker();\n\nconst initialState = 0;\n\n// prettier-ignore\nconst initialBoard = [\n    __, __, __, __, __, __, __, __, __, __,\n    __, __, __, __, __, __, __, __, __, __,\n    __, -R, -N, -B, -Q, -K, -B, -N, -R, __,\n    __, -P, -P, -P, -P, -P, -P, -P, -P, __,\n    __,  0,  0,  0,  0,  0,  0,  0,  0, __,\n    __,  0,  0,  0,  0,  0,  0,  0,  0, __,\n    __,  0,  0,  0,  0,  0,  0,  0,  0, __,\n    __,  0,  0,  0,  0,  0,  0,  0,  0, __,\n    __,  P,  P,  P,  P,  P,  P,  P,  P, __,\n    __,  R,  N,  B,  Q,  K,  B,  N,  R, __,\n    __, __, __, __, __, __, __, __, __, __,\n    __, __, __, __, __, __, __, __, __, __, initialState\n];\n\nconst GameArea = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Game = () => {\n  const [activePlayer, setActivePlayer] = useState(WHITE);\n  const [isAiThinking, setAiThinking] = useState(false);\n  const [board, setBoard] = useState(initialBoard);\n  const [gameEnded, setGameEnded] = useState(false);\n  const [lastMove, setLastMove] = useState({ start: -1, end: -1 });\n  const [availableMoves, setAvailableMoves] = useState(\n    generateMoves(board, activePlayer)\n  );\n  const [currentPieceMoves, setCurrentPieceMoves] = useState(new Set());\n  const [winningPlayer, setWinningPlayer] = useState();\n  const [searchDepth, setSearchDepth] = useState(5);\n\n  const clearAvailableMoves = () => setAvailableMoves([]);\n\n  const nextPlayer = playerColor => -playerColor;\n\n  const handleAIMove = (board, move, aiColor) => {\n    setAiThinking(false);\n\n    setLastMove(move);\n\n    const newBoard = board.slice(0);\n    performMove(newBoard, move);\n    setBoard(newBoard);\n\n    if (isCheckMate(newBoard, -aiColor)) {\n      setGameEnded(true);\n      setWinningPlayer(aiColor);\n\n      return;\n    }\n\n    const availablePlayerMoves = generateMoves(newBoard, -aiColor);\n    setAvailableMoves(availablePlayerMoves);\n\n    if (availablePlayerMoves.length === 0) {\n      setGameEnded(true);\n\n      return;\n    }\n\n    setActivePlayer(nextPlayer(aiColor));\n  };\n\n  const canMove = (start, end) => {\n    return availableMoves.some(\n      move => move.start === start && move.end === end\n    );\n  };\n\n  const forceAiMove = () => {\n    setAiThinking(true);\n    engine.calculateMove(board, activePlayer, searchDepth).then(move => {\n      handleAIMove(board, move, activePlayer);\n    });\n  };\n\n  const startNewGame = () => {\n    setBoard(initialBoard);\n    setActivePlayer(WHITE);\n    setGameEnded(false);\n    setLastMove({ start: -1, end: -1 });\n    setWinningPlayer(undefined);\n    setAvailableMoves(generateMoves(initialBoard, activePlayer));\n    setCurrentPieceMoves(new Set());\n  };\n\n  const handlePlayerMove = (piece, start, end) => {\n    if (gameEnded || isAiThinking) {\n      return;\n    }\n\n    if (!canMove(start, end)) {\n      return;\n    }\n\n    setLastMove({ start, end });\n\n    if (piece.name === 'Pawn' && activePlayer === WHITE && end < 29) {\n      // Promotion\n      const choice = prompt('Choose promotion (Q, R, B, K)', 'Q');\n      switch (choice.toUpperCase()) {\n        case 'R':\n          piece = pieces.ROOK;\n          break;\n        case 'B':\n          piece = pieces.BISHOP;\n          break;\n        case 'K':\n          piece = pieces.KNIGHT;\n          break;\n        case 'Q':\n        default:\n          piece = pieces.QUEEN;\n          break;\n      }\n    }\n\n    const newBoard = board.slice(0);\n    performMove(newBoard, { piece, start, end });\n    setBoard(newBoard);\n\n    if (isCheckMate(newBoard, -activePlayer)) {\n      setGameEnded(true);\n      setWinningPlayer(activePlayer);\n\n      return;\n    }\n\n    const moves = generateMoves(newBoard, -activePlayer);\n\n    if (moves.length === 0) {\n      setGameEnded(true);\n      return;\n    }\n\n    setAiThinking(true);\n    clearAvailableMoves();\n    engine\n      .calculateMove(newBoard, -activePlayer, searchDepth)\n      .then(move => handleAIMove(newBoard, move, -activePlayer));\n\n    setActivePlayer(-activePlayer);\n  };\n\n  const updatePossibleMoves = start => {\n    const possibleMoves = availableMoves\n      .filter(move => move.start === start)\n      .map(move => move.end);\n    setCurrentPieceMoves(new Set(possibleMoves));\n  };\n\n  const clearPossibleMoves = () => {\n    setCurrentPieceMoves(new Set());\n  };\n\n  return (\n    <GameArea>\n      <Board\n        board={board}\n        lastMove={lastMove}\n        currentPieceMoves={currentPieceMoves}\n        handlePlayerMove={handlePlayerMove}\n        updatePossibleMoves={updatePossibleMoves}\n        clearPossibleMoves={clearPossibleMoves}\n      />\n      <GameMenu\n        isAiThinking={isAiThinking}\n        gameEnded={gameEnded}\n        winningPlayerColor={winningPlayer}\n        startNewGame={startNewGame}\n        forceAiMove={forceAiMove}\n        searchDepth={searchDepth}\n        setSearchDepth={setSearchDepth}\n      />\n    </GameArea>\n  );\n};\n\nexport default Game;\n","/*\n * Chess App using React and Web Workers\n * Copyright (C) 2019 mhonert (https://github.com/mhonert)\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react';\nimport Game from './Game';\nimport { DndProvider } from 'react-dnd';\nimport HTML5Backend from 'react-dnd-html5-backend';\nimport TouchBackend from 'react-dnd-touch-backend';\n\nconst multiBackends = (...backendFactories) =>\n  function(manager) {\n    const backends = backendFactories.map(b => b(manager));\n    return {\n      setup: (...args) =>\n        backends.forEach(b => b.setup.apply(b, args)),\n      teardown: (...args) =>\n        backends.forEach(b => b.teardown.apply(b, args)),\n      connectDropTarget: (...args) =>\n        backends.forEach(b => b.connectDropTarget.apply(b, args)),\n      connectDragPreview: (...args) =>\n        backends.forEach(b => b.connectDragPreview.apply(b, args)),\n      connectDragSource: (...args) =>\n        backends.forEach(b => b.connectDragSource.apply(b, args)),\n    };\n  };\n\nfunction App() {\n  return (\n    <main>\n      <DndProvider backend={multiBackends(HTML5Backend, TouchBackend)}>\n        <Game />\n      </DndProvider>\n    </main>\n  );\n}\n\nexport default App;\n","/*\n * Chess App using React and Web Workers\n * Copyright (C) 2019 mhonert (https://github.com/mhonert)\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './ui/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}